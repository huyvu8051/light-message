#  Final Architecture Overview
#    Spring Boot application provides metrics and logs via Actuator and Micrometer.
#    Prometheus collects metrics.
#    Grafana visualizes metrics.
#    ELK Stack aggregates and analyzes logs.
#    Zipkin traces requests across distributed systems.
#    Alerts notify teams of performance degradation or failures.
version: '3.8'
services:
  spring-boot-app:
    container_name: sba
    build:
      context: .
    ports:
      - "8080:8080"    # App port
      - "9010:9010"    # JMX port for VisualVM
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - TOMCAT_MAX_THREADS=500
      - TOMCAT_MAX_CONNECTIONS=10000
      - TOMCAT_ACCEPT_COUNT=200
      - TOMCAT_CONNECTION_TIMEOUT=30000
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1g"
        reservations:
          cpus: "1"
          memory: "512m"
    volumes:
      - "./docker/tmp-hprof:/tmp"



  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  grafana-data:

