[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Box;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Circle;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Interval;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Line;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Lseg;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Path;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Point;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Polygon;"
  },
  {
    "name": "[Ljava.lang.Boolean;"
  },
  {
    "name": "[Ljava.lang.Byte;"
  },
  {
    "name": "[Ljava.lang.Character;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Double;"
  },
  {
    "name": "[Ljava.lang.Float;"
  },
  {
    "name": "[Ljava.lang.Integer;"
  },
  {
    "name": "[Ljava.lang.Long;"
  },
  {
    "name": "[Ljava.lang.Short;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.math.BigDecimal;"
  },
  {
    "name": "[Ljava.math.BigInteger;"
  },
  {
    "name": "[Ljava.net.InetAddress;"
  },
  {
    "name": "[Ljava.net.URI;"
  },
  {
    "name": "[Ljava.net.URL;"
  },
  {
    "name": "[Ljava.nio.ByteBuffer;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljava.time.Instant;"
  },
  {
    "name": "[Ljava.time.LocalDate;"
  },
  {
    "name": "[Ljava.time.LocalDateTime;"
  },
  {
    "name": "[Ljava.time.LocalTime;"
  },
  {
    "name": "[Ljava.time.OffsetDateTime;"
  },
  {
    "name": "[Ljava.time.OffsetTime;"
  },
  {
    "name": "[Ljava.time.ZoneId;"
  },
  {
    "name": "[Ljava.time.ZonedDateTime;"
  },
  {
    "name": "[Ljava.util.Date;"
  },
  {
    "name": "[Ljava.util.List;"
  },
  {
    "name": "[Ljava.util.UUID;"
  },
  {
    "name": "[Ljava.util.function.Supplier;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.AutoFlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.EvictEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEntityEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.FlushEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.LockEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.MergeEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PersistEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostDeleteEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostInsertEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PostUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.PreLoadEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.RefreshEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ReplicateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
  },
  {
    "name": "[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
  },
  {
    "name": "[Lorg.hibernate.jpa.event.spi.Callback;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.DotIdentifierConsumer;"
  },
  {
    "name": "[Lorg.hibernate.query.hql.spi.SqmCreationProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.spi.ParameterDeclarationContext;"
  },
  {
    "name": "[Lorg.hibernate.query.sqm.sql.FromClauseIndex;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.Clause;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.spi.SqlAstProcessingState;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.Statement;"
  },
  {
    "name": "[Lorg.hibernate.sql.ast.tree.select.QueryPart;"
  },
  {
    "name": "[Lorg.hibernate.sql.results.jdbc.spi.JdbcValuesSourceProcessingState;"
  },
  {
    "name": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "[[B"
  },
  {
    "name": "apple.security.AppleProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "brave.Tracer"
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "char",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Character"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.elasticsearch.ElasticsearchClient"
  },
  {
    "name": "co.elastic.clients.transport.ElasticsearchTransport"
  },
  {
    "name": "com.couchbase.client.java.Bucket"
  },
  {
    "name": "com.couchbase.client.java.Cluster"
  },
  {
    "name": "com.datastax.oss.driver.api.core.CqlSession"
  },
  {
    "name": "com.fasterxml.aalto.AsyncXMLStreamReader"
  },

  {
    "name": "com.github.benmanes.caffeine.cache.Cache"
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Caffeine"
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DataSourceDecorator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DataSourceDecoratorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourceDecoratorBeanPostProcessor",
        "parameterTypes": []
      },
      {
        "name": "dataSourceNameResolver",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DataSourceDecoratorBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DataSourceDecoratorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DataSourceNameResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.DecoratedDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.dsproxy.DataSourceProxyConfiguration"
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.dsproxy.DataSourceProxyProperties"
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.flexypool.FlexyPoolConfiguration$Ordered"
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.flexypool.FlexyPoolProperties"
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.p6spy.P6SpyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "jdbcEventListenerFactory",
        "parameterTypes": []
      },
      {
        "name": "p6SpyDataSourceDecorator",
        "parameterTypes": [
          "com.p6spy.engine.spy.JdbcEventListenerFactory"
        ]
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.p6spy.P6SpyDataSourceDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "decorate",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.gavlyukovskiy.boot.jdbc.decorator.p6spy.P6SpyProperties"
  },
  {
    "name": "com.github.therapi.runtimejavadoc.CommentFormatter"
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.gson.Gson"
  },
  {
    "name": "com.google.protobuf.Message"
  },
  {
    "name": "com.hazelcast.core.Hazelcast"
  },
  {
    "name": "com.hazelcast.core.HazelcastInstance"
  },
  {
    "name": "com.hazelcast.spring.cache.HazelcastCache"
  },
  {
    "name": "com.huyvu.lightmessage.AuditConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "auditorProvider",
        "parameterTypes": [
          "com.huyvu.lightmessage.security.UserContextProvider"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.AuditConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.AuditConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.AuditConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.InitData",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.repo.UserProfileJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.ConversationJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.MemberJpaRepo",
          "com.huyvu.lightmessage.service.RealtimeSendingService",
          "com.huyvu.lightmessage.r2.R2MemberRepo"
        ]
      },
      {
        "name": "reportCurrentTime",
        "parameterTypes": []
      },
      {
        "name": "run",
        "parameterTypes": [
          "org.springframework.boot.ApplicationArguments"
        ]
      },
      {
        "name": "scheduled",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.InitData$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.repo.UserProfileJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.ConversationJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.MemberJpaRepo",
          "com.huyvu.lightmessage.service.RealtimeSendingService",
          "com.huyvu.lightmessage.r2.R2MemberRepo"
        ]
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.LightMessageApplication",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.LightMessageApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.RabbitConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "notificationExchange",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "socketBinding",
        "parameterTypes": [
          "org.springframework.amqp.core.Queue",
          "org.springframework.amqp.core.TopicExchange"
        ]
      },
      {
        "name": "socketQueue",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.RabbitConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.RabbitConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.RabbitConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.ReactorNettyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.ReactorNettyConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.ReactorNettyConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.ReactorNettyConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.cache.CacheConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.cache.CacheConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.AuthenticationController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.service.AuthenticationService"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.AuthenticationController$AuthReqDTO"
  },
  {
    "name": "com.huyvu.lightmessage.controller.ConversationControllerV1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.service.MessageService",
          "com.huyvu.lightmessage.security.UserContextProvider"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.GlobalExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.MessageControllerV1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.service.MessageService",
          "com.huyvu.lightmessage.security.UserContextProvider"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.MessageControllerV2",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.service.MessageService",
          "com.huyvu.lightmessage.security.UserContextProvider"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.controller.Test",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.dto.CreateConversationRequestDTO"
  },
  {
    "name": "com.huyvu.lightmessage.dto.CursorPagingResponseDTO"
  },
  {
    "name": "com.huyvu.lightmessage.dto.MessageDTO"
  },
  {
    "name": "com.huyvu.lightmessage.dto.SendMessageRequestDTO"
  },
  {
    "name": "com.huyvu.lightmessage.entity.ConversationEntity"
  },
  {
    "name": "com.huyvu.lightmessage.entity.MessageEntity"
  },
  {
    "name": "com.huyvu.lightmessage.entity.MessageKafkaDTO",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "convId",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "memberIds",
        "parameterTypes": []
      },
      {
        "name": "senderId",
        "parameterTypes": []
      },
      {
        "name": "sentAt",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.exception.AuthenticationException"
  },
  {
    "name": "com.huyvu.lightmessage.exception.ConversationNotExistException"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreatedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "setIsGroupChat",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLastModifiedBy",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLastModifiedDate",
        "parameterTypes": [
          "java.time.Instant"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable$HibernateAccessOptimizer$2pfQNoWx",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable$HibernateAccessOptimizer$lvd45mmz",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable$HibernateAccessOptimizer$qq8al13j",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable$HibernateAccessOptimizer$y8hVEI7O",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.Auditable_"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Conversation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConvMembers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsGroupChat",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Conversation$HibernateAccessOptimizer$gOQLCUq1",
    "fields": [
      {
        "name": "invocationTarget$mt2crb1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Conversation$HibernateInstantiator$5mbO6mRg",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Conversation_"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Member",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConversation",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.model.Conversation"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLastSendAt",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.model.UserProfile"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Member$HibernateAccessOptimizer$On9RxWHb",
    "fields": [
      {
        "name": "invocationTarget$er83m30"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Member$HibernateInstantiator$h8kI7dgf",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Member_"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Message",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConv",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.model.Conversation"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setSendAt",
        "parameterTypes": [
          "java.time.OffsetDateTime"
        ]
      },
      {
        "name": "setSender",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.model.UserProfile"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Message$HibernateAccessOptimizer$cqhNDUdf",
    "fields": [
      {
        "name": "invocationTarget$h8mikn1"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Message$HibernateInstantiator$ikt2f47Q",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.Message_"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.UserProfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConvMembers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.UserProfile$HibernateAccessOptimizer$TrbvFHSY",
    "fields": [
      {
        "name": "invocationTarget$gpkcrk0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.UserProfile$HibernateInstantiator$qCIgHRdP",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.UserProfile_"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.model.package-info"
  },
  {
    "name": "com.huyvu.lightmessage.jpa.repo.ConversationJpaRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.repo.MemberJpaRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.repo.MessageJpaRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.jpa.repo.UserProfileJpaRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.r2.R2MemberRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.r2.model.Conversation",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.r2.model.Member",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.r2.model.Member_Accessor_oda7sw",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.r2.model.Member"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.r2.model.Member_Instantiator_oda7sw",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.r2.model.UserProfile",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.jpa.repo.MemberJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.MessageJpaRepo",
          "com.huyvu.lightmessage.jpa.repo.ConversationJpaRepo",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "findAllConversations",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "findAllMembers",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findAllMessages",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "findConversation",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findConversationLastMessage",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "findMember",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "saveConversation",
        "parameterTypes": [
          "com.huyvu.lightmessage.entity.ConversationEntity"
        ]
      },
      {
        "name": "saveMessage",
        "parameterTypes": [
          "com.huyvu.lightmessage.entity.MessageEntity"
        ]
      },
      {
        "name": "updateMemberLastSendAt",
        "parameterTypes": [
          "long",
          "java.time.OffsetDateTime"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoImpl$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoImpl$ConversationDto"
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoImpl$MessageDto"
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoR2",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoR2Impl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.r2.R2MemberRepo"
        ]
      },
      {
        "name": "findAllMessages",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "findMember",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.repository.MessageRepoR2Impl$$SpringCGLIB$$0",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.ReactiveTokenBasedSecurityFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "filter",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.server.WebFilterChain"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.SecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.security.ReactiveTokenBasedSecurityFilter"
        ]
      },
      {
        "name": "securityWebFilterChain",
        "parameterTypes": [
          "org.springframework.security.config.web.server.ServerHttpSecurity"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.SecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.security.ReactiveTokenBasedSecurityFilter"
        ]
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.SecurityConfiguration$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.SecurityConfiguration$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.security.UserContext"
  },
  {
    "name": "com.huyvu.lightmessage.security.UserContextProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.security.UserContextProviderImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      },
      {
        "name": "getUserContextR2",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.service.AuthenticationService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.service.AuthenticationService$Auth"
  },
  {
    "name": "com.huyvu.lightmessage.service.AuthenticationServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "com.huyvu.lightmessage.service.AuthenticationService$Auth"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.service.MessageService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.service.MessageServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.repository.MessageRepo",
          "com.huyvu.lightmessage.repository.MessageRepoR2",
          "com.huyvu.lightmessage.service.RealtimeSendingService"
        ]
      },
      {
        "name": "createGroupChatConversation",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.dto.CreateConversationRequestDTO"
        ]
      },
      {
        "name": "getMessages",
        "parameterTypes": [
          "long",
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "getMessagesR2",
        "parameterTypes": [
          "long",
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "getNewestConversation",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "getNewestConversation",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.util.CursorPaging"
        ]
      },
      {
        "name": "sendMessage",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.dto.SendMessageRequestDTO"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.service.RealtimeSendingService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.huyvu.lightmessage.service.RealtimeSendingServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.core.RabbitTemplate"
        ]
      },
      {
        "name": "sendMessageNotification",
        "parameterTypes": [
          "long",
          "com.huyvu.lightmessage.entity.MessageKafkaDTO"
        ]
      }
    ]
  },
  {
    "name": "com.huyvu.lightmessage.util.CursorPaging"
  },
  {
    "name": "com.huyvu.lightmessage.util.CursorPagingResult"
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.mongodb.MongoClientSettings"
  },
  {
    "name": "com.mongodb.client.MongoClient"
  },
  {
    "name": "com.mongodb.reactivestreams.client.MongoClient"
  },
  {
    "name": "com.p6spy.engine.event.CompoundJdbcEventListener"
  },
  {
    "name": "com.p6spy.engine.event.JdbcEventListener"
  },
  {
    "name": "com.p6spy.engine.logging.P6LogFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.logging.P6LogOptions",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.logging.P6LogOptionsMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.p6spy.engine.spy.DefaultJdbcEventListenerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createJdbcEventListener",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.JdbcEventListenerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.p6spy.engine.spy.P6DataSource"
  },
  {
    "name": "com.p6spy.engine.spy.P6SpyDriver"
  },
  {
    "name": "com.p6spy.engine.spy.P6SpyFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.P6SpyOptions",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.P6SpyOptionsMBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.p6spy.engine.spy.appender.CustomLineFormat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.appender.FileLogger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.appender.SingleLineFormat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.p6spy.engine.spy.appender.Slf4JLogger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.querydsl.core.Query"
  },
  {
    "name": "com.querydsl.core.types.Predicate"
  },
  {
    "name": "com.rabbitmq.client.AMQP$BasicProperties"
  },
  {
    "name": "com.rabbitmq.client.AMQP$Queue$DeclareOk"
  },
  {
    "name": "com.rabbitmq.client.AddressResolver"
  },
  {
    "name": "com.rabbitmq.client.Channel",
    "methods": [
      {
        "name": "basicPublish",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "com.rabbitmq.client.AMQP$BasicProperties",
          "byte[]"
        ]
      },
      {
        "name": "exchangeDeclare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "java.util.Map"
        ]
      },
      {
        "name": "queueBind",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queueDeclare",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "com.rabbitmq.client.ConfirmCallback"
  },
  {
    "name": "com.rabbitmq.client.ConfirmListener"
  },
  {
    "name": "com.rabbitmq.client.Connection"
  },
  {
    "name": "com.rabbitmq.client.ConnectionFactory"
  },
  {
    "name": "com.rabbitmq.client.DefaultConsumer"
  },
  {
    "name": "com.rabbitmq.client.Envelope"
  },
  {
    "name": "com.rabbitmq.client.GetResponse"
  },
  {
    "name": "com.rabbitmq.client.RecoveryListener"
  },
  {
    "name": "com.rabbitmq.client.Return"
  },
  {
    "name": "com.rabbitmq.client.ShutdownListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.rabbitmq.client.ShutdownSignalException"
  },
  {
    "name": "com.rabbitmq.client.impl.CredentialsProvider"
  },
  {
    "name": "com.rabbitmq.client.impl.CredentialsRefreshService"
  },
  {
    "name": "com.samskivert.mustache.Mustache"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sendgrid.SendGrid"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getMaxFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getOpenFileDescriptorCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
  },
  {
    "name": "com.vladmihalcea.flexypool.FlexyPoolDataSource"
  },
  {
    "name": "com.wavefront.sdk.common.WavefrontSender"
  },
  {
    "name": "com.wavefront.sdk.common.application.ApplicationTags"
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariPoolMXBean"
  },
  {
    "name": "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolBase",
    "fields": [
      {
        "name": "catalog"
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.pool.PoolEntry",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "graphql.GraphQL"
  },
  {
    "name": "groovy.lang.MetaClass"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "groovy.text.markup.MarkupTemplateEngine"
  },
  {
    "name": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
  },
  {
    "name": "io.micrometer.appoptics.AppOpticsMeterRegistry"
  },
  {
    "name": "io.micrometer.atlas.AtlasMeterRegistry"
  },
  {
    "name": "io.micrometer.common.KeyValue"
  },
  {
    "name": "io.micrometer.common.KeyValues"
  },
  {
    "name": "io.micrometer.common.lang.NonNullApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.NonNullFields",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.context.ContextRegistry"
  },
  {
    "name": "io.micrometer.core.annotation.Timed"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.Counter"
  },
  {
    "name": "io.micrometer.core.instrument.DistributionSummary"
  },
  {
    "name": "io.micrometer.core.instrument.FunctionCounter"
  },
  {
    "name": "io.micrometer.core.instrument.FunctionTimer"
  },
  {
    "name": "io.micrometer.core.instrument.Gauge"
  },
  {
    "name": "io.micrometer.core.instrument.HighCardinalityTagsDetector"
  },
  {
    "name": "io.micrometer.core.instrument.LongTaskTimer"
  },
  {
    "name": "io.micrometer.core.instrument.Measurement"
  },
  {
    "name": "io.micrometer.core.instrument.Meter"
  },
  {
    "name": "io.micrometer.core.instrument.Meter$Id"
  },
  {
    "name": "io.micrometer.core.instrument.Meter$Type"
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry$Config"
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry$More"
  },
  {
    "name": "io.micrometer.core.instrument.Statistic"
  },
  {
    "name": "io.micrometer.core.instrument.Tag"
  },
  {
    "name": "io.micrometer.core.instrument.Tags"
  },
  {
    "name": "io.micrometer.core.instrument.TimeGauge"
  },
  {
    "name": "io.micrometer.core.instrument.Timer"
  },
  {
    "name": "io.micrometer.core.instrument.Timer$Builder"
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilterReply"
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "requireValid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.NamingConvention"
  },
  {
    "name": "io.micrometer.core.instrument.config.validate.Validated"
  },
  {
    "name": "io.micrometer.core.instrument.config.validate.ValidationException"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.HistogramSupport"
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowSum",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.pause.PauseDetector"
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.search.RequiredSearch"
  },
  {
    "name": "io.micrometer.core.instrument.search.Search"
  },
  {
    "name": "io.micrometer.datadog.DatadogMeterRegistry"
  },
  {
    "name": "io.micrometer.dynatrace.DynatraceMeterRegistry"
  },
  {
    "name": "io.micrometer.elastic.ElasticMeterRegistry"
  },
  {
    "name": "io.micrometer.ganglia.GangliaMeterRegistry"
  },
  {
    "name": "io.micrometer.graphite.GraphiteMeterRegistry"
  },
  {
    "name": "io.micrometer.humio.HumioMeterRegistry"
  },
  {
    "name": "io.micrometer.influx.InfluxMeterRegistry"
  },
  {
    "name": "io.micrometer.jmx.JmxMeterRegistry"
  },
  {
    "name": "io.micrometer.kairos.KairosMeterRegistry"
  },
  {
    "name": "io.micrometer.newrelic.NewRelicMeterRegistry"
  },
  {
    "name": "io.micrometer.observation.KeyValuesConvention",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.Observation"
  },
  {
    "name": "io.micrometer.observation.Observation$Context"
  },
  {
    "name": "io.micrometer.observation.Observation$Event"
  },
  {
    "name": "io.micrometer.observation.Observation$Scope"
  },
  {
    "name": "io.micrometer.observation.ObservationConvention",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getContextualName",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getHighCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getLowCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry$ObservationConfig"
  },
  {
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.observation.annotation.Observed"
  },
  {
    "name": "io.micrometer.observation.aop.ObservedAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.prometheus.PrometheusMeterRegistry"
  },
  {
    "name": "io.micrometer.prometheusmetrics.MicrometerCollector"
  },
  {
    "name": "io.micrometer.prometheusmetrics.MicrometerCollector$Family"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusConfig",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusCounter"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusDistributionSummary"
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.prometheusmetrics.PrometheusTimer"
  },
  {
    "name": "io.micrometer.registry.otlp.OtlpMeterRegistry"
  },
  {
    "name": "io.micrometer.signalfx.SignalFxMeterRegistry"
  },
  {
    "name": "io.micrometer.stackdriver.StackdriverMeterRegistry"
  },
  {
    "name": "io.micrometer.statsd.StatsdMeterRegistry"
  },
  {
    "name": "io.micrometer.tracing.Tracer"
  },
  {
    "name": "io.micrometer.tracing.otel.bridge.OtelTracer"
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.buffer.ByteBuf"
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator"
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext",
    "fields": [
      {
        "name": "handlerState"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [
      {
        "name": "totalPendingSize"
      },
      {
        "name": "unwritable"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [
      {
        "name": "autoRead"
      },
      {
        "name": "writeBufferWaterMark"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [
      {
        "name": "estimatorHandle"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.kqueue.KQueue"
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.LengthFieldBasedFrameDecoder"
  },
  {
    "name": "io.netty.incubator.channel.uring.IOUring"
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
    "fields": [
      {
        "name": "attributeMap"
      }
    ]
  },
  {
    "name": "io.netty.util.NettyRuntime"
  },
  {
    "name": "io.netty.util.Recycler$DefaultHandle",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
    "fields": [
      {
        "name": "droppedRecords"
      },
      {
        "name": "head"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.DefaultPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [
      {
        "name": "state"
      },
      {
        "name": "threadProperties"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty5.buffer.Buffer"
  },
  {
    "name": "io.opentelemetry.sdk.OpenTelemetrySdk"
  },
  {
    "name": "io.prometheus.metrics.model.registry.Collector"
  },
  {
    "name": "io.prometheus.metrics.model.registry.MultiCollector"
  },
  {
    "name": "io.prometheus.metrics.model.registry.PrometheusRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.prometheus.metrics.model.registry.PrometheusScrapeRequest"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.DataPointSnapshot"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Exemplar"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Exemplars"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.Labels"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricMetadata"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricSnapshot"
  },
  {
    "name": "io.prometheus.metrics.model.snapshots.MetricSnapshots"
  },
  {
    "name": "io.r2dbc.pool.ConnectionPool",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "create",
        "parameterTypes": []
      },
      {
        "name": "dispose",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "isDisposed",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.r2dbc.pool.ConnectionPoolConfiguration"
  },
  {
    "name": "io.r2dbc.pool.PoolMetrics"
  },
  {
    "name": "io.r2dbc.postgresql.client.ReactorNettyClient$Conversation",
    "fields": [
      {
        "name": "demand"
      }
    ]
  },
  {
    "name": "io.r2dbc.postgresql.client.ReactorNettyClient$EnsureSubscribersCompleteChannelHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.r2dbc.postgresql.codec.Box"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Circle"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Interval"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Json"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Line"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Lseg"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Path"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Point"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Polygon"
  },
  {
    "name": "io.r2dbc.proxy.ProxyConnectionFactory"
  },
  {
    "name": "io.r2dbc.spi.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.r2dbc.spi.Connection",
    "methods": [
      {
        "name": "createStatement",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "dispose",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactoryMetadata"
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactoryOptions"
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
  },
  {
    "name": "io.r2dbc.spi.IsolationLevel"
  },
  {
    "name": "io.r2dbc.spi.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.r2dbc.spi.Option"
  },
  {
    "name": "io.r2dbc.spi.R2dbcException"
  },
  {
    "name": "io.r2dbc.spi.Readable"
  },
  {
    "name": "io.r2dbc.spi.Result"
  },
  {
    "name": "io.r2dbc.spi.Row"
  },
  {
    "name": "io.r2dbc.spi.RowMetadata"
  },
  {
    "name": "io.r2dbc.spi.Statement"
  },
  {
    "name": "io.r2dbc.spi.TransactionDefinition"
  },
  {
    "name": "io.r2dbc.spi.Wrapped",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.rsocket.RSocket"
  },
  {
    "name": "io.rsocket.core.RSocketServer"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.swagger.v3.core.converter.AnnotatedType"
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isOpenapi31",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverterContext"
  },
  {
    "name": "io.swagger.v3.core.converter.ModelConverters",
    "fields": [
      {
        "name": "converters"
      }
    ]
  },
  {
    "name": "io.swagger.v3.core.util.ObjectMapperFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.annotations.Hidden",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.swagger.v3.oas.annotations.OpenAPIDefinition"
  },
  {
    "name": "io.swagger.v3.oas.annotations.Operation"
  },
  {
    "name": "io.swagger.v3.oas.annotations.Parameter"
  },
  {
    "name": "io.swagger.v3.oas.annotations.media.ExampleObject"
  },
  {
    "name": "io.swagger.v3.oas.annotations.media.Schema"
  },
  {
    "name": "io.swagger.v3.oas.annotations.parameters.RequestBody"
  },
  {
    "name": "io.swagger.v3.oas.annotations.responses.ApiResponse"
  },
  {
    "name": "io.swagger.v3.oas.annotations.security.OAuthFlow"
  },
  {
    "name": "io.swagger.v3.oas.annotations.security.OAuthFlows"
  },
  {
    "name": "io.swagger.v3.oas.annotations.security.OAuthScope"
  },
  {
    "name": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
  },
  {
    "name": "io.swagger.v3.oas.annotations.security.SecurityScheme"
  },
  {
    "name": "io.swagger.v3.oas.annotations.tags.Tag"
  },
  {
    "name": "io.swagger.v3.oas.annotations.tags.Tags"
  },
  {
    "name": "io.swagger.v3.oas.models.Components"
  },
  {
    "name": "io.swagger.v3.oas.models.OpenAPI"
  },
  {
    "name": "io.swagger.v3.oas.models.Operation"
  },
  {
    "name": "io.swagger.v3.oas.models.PathItem"
  },
  {
    "name": "io.swagger.v3.oas.models.SpecVersion"
  },
  {
    "name": "io.swagger.v3.oas.models.examples.Example"
  },
  {
    "name": "io.swagger.v3.oas.models.info.Info"
  },
  {
    "name": "io.swagger.v3.oas.models.media.ComposedSchema"
  },
  {
    "name": "io.swagger.v3.oas.models.media.Content"
  },
  {
    "name": "io.swagger.v3.oas.models.media.MediaType"
  },
  {
    "name": "io.swagger.v3.oas.models.media.Schema"
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.Parameter"
  },
  {
    "name": "io.swagger.v3.oas.models.parameters.RequestBody"
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponse"
  },
  {
    "name": "io.swagger.v3.oas.models.responses.ApiResponses"
  },
  {
    "name": "io.swagger.v3.oas.models.security.Scopes"
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityRequirement"
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$In"
  },
  {
    "name": "io.swagger.v3.oas.models.security.SecurityScheme$Type"
  },
  {
    "name": "io.swagger.v3.oas.models.servers.Server"
  },
  {
    "name": "io.swagger.v3.oas.models.tags.Tag"
  },
  {
    "name": "io.undertow.Undertow"
  },
  {
    "name": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.activation.MimeType"
  },
  {
    "name": "jakarta.annotation.ManagedBean"
  },
  {
    "name": "jakarta.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.PostConstruct",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.PreDestroy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.Resource"
  },
  {
    "name": "jakarta.ejb.EJB"
  },
  {
    "name": "jakarta.ejb.TransactionAttribute"
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Named"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.jms.ConnectionFactory"
  },
  {
    "name": "jakarta.jms.Message"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.mail.internet.MimeMessage"
  },
  {
    "name": "jakarta.persistence.Cache"
  },
  {
    "name": "jakarta.persistence.CacheRetrieveMode"
  },
  {
    "name": "jakarta.persistence.CacheStoreMode"
  },
  {
    "name": "jakarta.persistence.Entity",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityGraph"
  },
  {
    "name": "jakarta.persistence.EntityListeners",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy170"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy170"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getLockMode",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy170"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.persistence.LockModeType",
          "java.util.Map"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy170"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "jdk.proxy2.$Proxy163"
        ]
      },
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "jakarta.persistence.Query"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "jakarta.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "jdk.proxy2.$Proxy163"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "jdk.proxy2.$Proxy163"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "jdk.proxy2.$Proxy163"
        ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.FlushModeType"
  },
  {
    "name": "jakarta.persistence.ForeignKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.GeneratedValue",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Id",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Index",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.JoinColumn",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.LockModeType"
  },
  {
    "name": "jakarta.persistence.ManyToOne",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.MappedSuperclass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.OneToMany",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.PersistenceContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceException"
  },
  {
    "name": "jakarta.persistence.PersistenceProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PersistenceUnitUtil"
  },
  {
    "name": "jakarta.persistence.PrePersist",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.PreUpdate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.Query"
  },
  {
    "name": "jakarta.persistence.SharedCacheMode"
  },
  {
    "name": "jakarta.persistence.SynchronizationType"
  },
  {
    "name": "jakarta.persistence.Table",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.persistence.Transient",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "jakarta.persistence.Tuple",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "toArray"
      }
    ]
  },
  {
    "name": "jakarta.persistence.TypedQuery"
  },
  {
    "name": "jakarta.persistence.UniqueConstraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.persistence.ValidationMode"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaBuilder"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaDelete"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaQuery"
  },
  {
    "name": "jakarta.persistence.criteria.CriteriaUpdate"
  },
  {
    "name": "jakarta.persistence.metamodel.Metamodel"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceProvider"
  },
  {
    "name": "jakarta.persistence.spi.PersistenceUnitInfo"
  },
  {
    "name": "jakarta.servlet.Filter"
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement"
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "jakarta.servlet.ServletRegistration"
  },
  {
    "name": "jakarta.servlet.ServletRequest"
  },
  {
    "name": "jakarta.transaction.Transaction"
  },
  {
    "name": "jakarta.transaction.TransactionManager"
  },
  {
    "name": "jakarta.transaction.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintViolation"
  },
  {
    "name": "jakarta.validation.Validator"
  },
  {
    "name": "jakarta.validation.ValidatorFactory"
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator"
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Console",
    "methods": [
      {
        "name": "isTerminal",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.io.DataInput"
  },
  {
    "name": "java.io.DataOutput"
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.FileDescriptor"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.IOException"
  },
  {
    "name": "java.io.InputStream"
  },
  {
    "name": "java.io.ObjectInputStream"
  },
  {
    "name": "java.io.ObjectStreamException"
  },
  {
    "name": "java.io.OutputStream"
  },
  {
    "name": "java.io.PrintWriter"
  },
  {
    "name": "java.io.Reader"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Writer"
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "toboolean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.CharSequence"
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "tochar",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotatedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedSuperclass",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getNestHost",
        "parameterTypes": []
      },
      {
        "name": "getNestMembers",
        "parameterTypes": []
      },
      {
        "name": "getPermittedSubclasses",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isNestmateOf",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isRecord",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      },
      {
        "name": "getUnnamedModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassNotFoundException"
  },
  {
    "name": "java.lang.CloneNotSupportedException"
  },
  {
    "name": "java.lang.Cloneable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Enum"
  },
  {
    "name": "java.lang.Exception"
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.FunctionalInterface"
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.IllegalStateException"
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.InterruptedException"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.LinkageError"
  },
  {
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addExports",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Module"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Module"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Runnable"
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "feature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimeException"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.SafeVarargs"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": [
          "java.security.Permission"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StringBuilder"
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.lang.Thread$State"
  },
  {
    "name": "java.lang.ThreadGroup"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.annotation.Annotation"
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      },
      {
        "name": "lookupClass",
        "parameterTypes": []
      },
      {
        "name": "lookupModes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.invoke.SerializedLambda"
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadMXBean"
  },
  {
    "name": "java.lang.reflect.AnnotatedArrayType",
    "methods": [
      {
        "name": "getAnnotatedGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AnnotatedType",
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Constructor"
  },
  {
    "name": "java.lang.reflect.Executable",
    "methods": [
      {
        "name": "getAnnotatedParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getAnnotatedReceiverType",
        "parameterTypes": []
      },
      {
        "name": "getParameterCount",
        "parameterTypes": []
      },
      {
        "name": "getParameters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Field"
  },
  {
    "name": "java.lang.reflect.GenericArrayType",
    "methods": [
      {
        "name": "getGenericComponentType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.Method",
    "methods": [
      {
        "name": "getAnnotatedReturnType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Parameter",
    "methods": [
      {
        "name": "getModifiers",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isNamePresent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getOwnerType",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Proxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getAccessor",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.InetAddress"
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URI"
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.http.HttpClient"
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "MAX_MEMORY"
      },
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
    "name": "java.nio.channels.spi.SelectorProvider",
    "methods": [
      {
        "name": "openServerSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      },
      {
        "name": "openSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.nio.file.Path"
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.CallableStatement"
  },
  {
    "name": "java.sql.Connection"
  },
  {
    "name": "java.sql.ConnectionBuilder"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.PreparedStatement"
  },
  {
    "name": "java.sql.ResultSet"
  },
  {
    "name": "java.sql.SQLException"
  },
  {
    "name": "java.sql.SQLFeatureNotSupportedException"
  },
  {
    "name": "java.sql.SQLWarning"
  },
  {
    "name": "java.sql.ShardingKeyBuilder"
  },
  {
    "name": "java.sql.Statement"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Types",
    "allPublicFields": true
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.text.DateFormat"
  },
  {
    "name": "java.time.Clock"
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.OffsetDateTime"
  },
  {
    "name": "java.time.temporal.TemporalAccessor"
  },
  {
    "name": "java.util.ArrayList"
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "java.util.Comparator"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.Deque"
  },
  {
    "name": "java.util.EnumMap"
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Iterator"
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Map$Entry"
  },
  {
    "name": "java.util.NavigableSet"
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.util.Properties"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.util.ServiceLoader"
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.Spliterator"
  },
  {
    "name": "java.util.TimeZone"
  },
  {
    "name": "java.util.concurrent.BlockingQueue"
  },
  {
    "name": "java.util.concurrent.Callable",
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.CompletableFuture"
  },
  {
    "name": "java.util.concurrent.CountDownLatch"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ExecutorService"
  },
  {
    "name": "java.util.concurrent.Future"
  },
  {
    "name": "java.util.concurrent.RejectedExecutionHandler"
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.concurrent.ScheduledFuture"
  },
  {
    "name": "java.util.concurrent.ScheduledThreadPoolExecutor"
  },
  {
    "name": "java.util.concurrent.Semaphore"
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadPoolExecutor"
  },
  {
    "name": "java.util.concurrent.TimeUnit"
  },
  {
    "name": "java.util.concurrent.TimeoutException"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicInteger"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicLong"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "java.util.concurrent.locks.Lock"
  },
  {
    "name": "java.util.function.BiConsumer"
  },
  {
    "name": "java.util.function.BiFunction"
  },
  {
    "name": "java.util.function.BiPredicate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "negate",
        "parameterTypes": []
      },
      {
        "name": "or",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      }
    ]
  },
  {
    "name": "java.util.function.Consumer"
  },
  {
    "name": "java.util.function.Function"
  },
  {
    "name": "java.util.function.Predicate"
  },
  {
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.ToDoubleFunction"
  },
  {
    "name": "java.util.function.ToLongFunction"
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.Logger"
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.stream.Collector"
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "javax.annotation.ManagedBean"
  },
  {
    "name": "javax.annotation.Nonnull"
  },
  {
    "name": "javax.annotation.PostConstruct"
  },
  {
    "name": "javax.annotation.PreDestroy"
  },
  {
    "name": "javax.annotation.Resource"
  },
  {
    "name": "javax.cache.Cache"
  },
  {
    "name": "javax.cache.CacheManager"
  },
  {
    "name": "javax.cache.Caching"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Named"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSignature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.MBeanServer"
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.MalformedObjectNameException"
  },
  {
    "name": "javax.management.Notification"
  },
  {
    "name": "javax.management.NotificationEmitter"
  },
  {
    "name": "javax.management.NotificationListener"
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.StandardEmitterMBean",
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.naming.NamingException"
  },
  {
    "name": "javax.naming.Reference"
  },
  {
    "name": "javax.naming.Referenceable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getReference",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.naming.ldap.LdapContext"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.vm.annotation.IntrinsicCandidate"
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "cacheMBeanInfo",
        "parameterTypes": [
          "javax.management.MBeanInfo"
        ]
      },
      {
        "name": "getCachedMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": []
      },
      {
        "name": "getNotificationInfo",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.Unit"
  },
  {
    "name": "kotlin.coroutines.Continuation"
  },
  {
    "name": "kotlinx.coroutines.flow.Flow"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "liquibase.change.DatabaseChange"
  },
  {
    "name": "liquibase.integration.spring.SpringLiquibase"
  },
  {
    "name": "net.bytebuddy.asm.Advice$AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Argument",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Enter",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Exit",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldGetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldSetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "declaringType",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Local",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$OnMethodEnter",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "prependLineNumber",
        "parameterTypes": []
      },
      {
        "name": "skipOn",
        "parameterTypes": []
      },
      {
        "name": "skipOnIndex",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$OnMethodExit",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "backupArguments",
        "parameterTypes": []
      },
      {
        "name": "inline",
        "parameterTypes": []
      },
      {
        "name": "onThrowable",
        "parameterTypes": []
      },
      {
        "name": "repeatOn",
        "parameterTypes": []
      },
      {
        "name": "repeatOnIndex",
        "parameterTypes": []
      },
      {
        "name": "suppress",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$Return",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$SelfCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.asm.Advice$This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "optional",
        "parameterTypes": []
      },
      {
        "name": "readOnly",
        "parameterTypes": []
      },
      {
        "name": "typing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.asm.Advice$Thrown",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition",
    "methods": [
      {
        "name": "asErasure",
        "parameterTypes": []
      },
      {
        "name": "asGenericType",
        "parameterTypes": []
      },
      {
        "name": "isPrimitive",
        "parameterTypes": []
      },
      {
        "name": "represents",
        "parameterTypes": [
          "java.lang.reflect.Type"
        ]
      }
    ]
  },
  {
    "name": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.AllArguments",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Argument",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Default",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.FieldValue",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Origin",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.Super",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCall",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethod",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.implementation.bind.annotation.This",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "net.bytebuddy.utility.Invoker",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.Invoker$Dispatcher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "net.bytebuddy.utility.JavaModule$Module",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.bytebuddy.utility.JavaModule$Resolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "net.sf.jsqlparser.parser.JSqlParser"
  },
  {
    "name": "net.ttddyy.dsproxy.support.ProxyDataSource"
  },
  {
    "name": "oracle.jdbc.OracleConnection"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSource"
  },
  {
    "name": "oracle.ucp.jdbc.PoolDataSourceImpl"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.catalina.Manager"
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.commons.dbcp2.BasicDataSource"
  },
  {
    "name": "org.apache.commons.logging.Log"
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.derby.jdbc.EmbeddedDriver"
  },
  {
    "name": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
  },
  {
    "name": "org.apache.hc.core5.http.nio.AsyncRequestProducer"
  },
  {
    "name": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
  },
  {
    "name": "org.apache.jasper.compiler.JspConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.LoggerContext"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.apache.pulsar.client.api.PulsarClient"
  },
  {
    "name": "org.apache.tomcat.jdbc.pool.DataSource"
  },
  {
    "name": "org.apache.tomcat.jdbc.pool.DataSourceProxy"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "name": "org.aspectj.internal.lang.annotation.ajcDeclareParents",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.AfterReturning",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Around",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Aspect",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Before",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.Pointcut",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.lang.annotation.SuppressAjWarnings",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.aspectj.weaver.Advice"
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.aspectj.weaver.World"
        ]
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aspectj.weaver.tools.Jdk14TraceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.cache2k.Cache2kBuilder"
  },
  {
    "name": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
  },
  {
    "name": "org.cache2k.extra.spring.SpringCache2kCache"
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.crac.Resource"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.ee10.servlet.ServletHolder"
  },
  {
    "name": "org.eclipse.jetty.ee10.webapp.WebAppContext"
  },
  {
    "name": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jetty.server.Server"
  },
  {
    "name": "org.eclipse.jetty.util.Loader"
  },
  {
    "name": "org.eclipse.persistence.internal.jpa.deployment.JavaSECMPInitializerAgent"
  },
  {
    "name": "org.eclipse.persistence.jpa.JpaEntityManager"
  },
  {
    "name": "org.elasticsearch.client.RestClient"
  },
  {
    "name": "org.elasticsearch.client.RestClientBuilder"
  },
  {
    "name": "org.flywaydb.core.Flyway"
  },
  {
    "name": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
  },
  {
    "name": "org.glassfish.jersey.server.ResourceConfig"
  },
  {
    "name": "org.glassfish.jersey.servlet.ServletContainer"
  },
  {
    "name": "org.h2.Driver"
  },
  {
    "name": "org.h2.server.web.JakartaWebServlet"
  },
  {
    "name": "org.hibernate.Cache"
  },
  {
    "name": "org.hibernate.CacheMode"
  },
  {
    "name": "org.hibernate.Filter"
  },
  {
    "name": "org.hibernate.FlushMode"
  },
  {
    "name": "org.hibernate.HibernateException"
  },
  {
    "name": "org.hibernate.IdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.Internal",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.LobHelper"
  },
  {
    "name": "org.hibernate.LockMode"
  },
  {
    "name": "org.hibernate.LockOptions"
  },
  {
    "name": "org.hibernate.MultiIdentifierLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.NaturalIdMultiLoadAccess"
  },
  {
    "name": "org.hibernate.ReplicationMode"
  },
  {
    "name": "org.hibernate.Session",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "disableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "enableFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getEnabledFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityGraphs",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getFlushMode",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "persist",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFlushMode",
        "parameterTypes": [
          "jakarta.persistence.FlushModeType"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.Session$LockRequest"
  },
  {
    "name": "org.hibernate.SessionBuilder"
  },
  {
    "name": "org.hibernate.SessionEventListener"
  },
  {
    "name": "org.hibernate.SessionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.SharedSessionBuilder"
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "beginTransaction",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createEntityGraph",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureCall",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "createStoredProcedureQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "doReturningWork",
        "parameterTypes": [
          "org.hibernate.jdbc.ReturningWork"
        ]
      },
      {
        "name": "doWork",
        "parameterTypes": [
          "org.hibernate.jdbc.Work"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBatchSize",
        "parameterTypes": []
      },
      {
        "name": "getNamedProcedureCall",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTenantIdentifier",
        "parameterTypes": []
      },
      {
        "name": "getTenantIdentifierValue",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": []
      },
      {
        "name": "isConnected",
        "parameterTypes": []
      },
      {
        "name": "isJoinedToTransaction",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "joinTransaction",
        "parameterTypes": []
      },
      {
        "name": "setJdbcBatchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.SimpleNaturalIdLoadAccess"
  },
  {
    "name": "org.hibernate.StatelessSession"
  },
  {
    "name": "org.hibernate.StatelessSessionBuilder"
  },
  {
    "name": "org.hibernate.Transaction"
  },
  {
    "name": "org.hibernate.UnknownProfileException"
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.boot.archive.spi.ArchiveDescriptorFactory"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.beanvalidation.TypeSafeActivator",
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.boot.beanvalidation.ActivationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.model.naming.ImplicitNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.naming.PhysicalNamingStrategy"
  },
  {
    "name": "org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.spi.SessionFactoryOptions"
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirty",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$AreFieldsDirtyWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearDirtyAttributesWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$ClearOwner",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetCollectionTrackerWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$GetDirtyAttributesWithoutCollections",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$InitializeLazyAttributeLoadingInterceptor",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SetOwner",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$SuspendDirtyTracking",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.internal.bytebuddy.CodeTemplates$TrackChange",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.enhance.spi.EnhancementInfo",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$AccessOptimizer",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.bytecode.spi.ReflectionOptimizer$InstantiationOptimizer",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.cache.internal.DisabledCaching",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en"
  },
  {
    "name": "org.hibernate.dialect.DialectLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.dialect.PostgreSQL95Dialect"
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLInetJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLIntervalSecondJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLJsonPGObjectJsonbType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQLStructPGObjectJdbcType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.JdbcBatchLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "setJndiService",
        "parameterTypes": [
          "org.hibernate.engine.jndi.spi.JndiService"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.mutation.internal.StandardMutationExecutorService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.spi.SqlStatementLogger",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.ExtendedSelfDirtinessTracker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.FilterDefinition"
  },
  {
    "name": "org.hibernate.engine.spi.Managed",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asManaged"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ManagedEntity",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asManagedEntity"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.ManagedMappedSuperclass",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asManagedMappedSuperclass"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.PersistentAttributeInterceptable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asPersistentAttributeInterceptable"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.PrimeAmongSecondarySupertypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asCompositeOwner"
      },
      {
        "name": "asCompositeTracker"
      },
      {
        "name": "asHibernateProxy"
      },
      {
        "name": "asManagedComposite"
      },
      {
        "name": "asProxyConfiguration"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.SelfDirtinessTracker",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "fields": [
      {
        "name": "asSelfDirtinessTracker"
      }
    ]
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.graph.RootGraph"
  },
  {
    "name": "org.hibernate.id.enhanced.PooledOptimizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.id.enhanced.SequenceStyleGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.enhanced.StandardNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.factory.internal.StandardIdentifierGeneratorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.jdbc.ReturningWork"
  },
  {
    "name": "org.hibernate.jdbc.Work"
  },
  {
    "name": "org.hibernate.loader.ast.internal.StandardBatchLoaderFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en"
  },
  {
    "name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.metamodel.model.domain.JpaMetamodel"
  },
  {
    "name": "org.hibernate.persister.collection.OneToManyPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.metamodel.spi.RuntimeModelCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.procedure.ProcedureCall"
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy"
  },
  {
    "name": "org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.query.MutationQuery"
  },
  {
    "name": "org.hibernate.query.NativeQuery"
  },
  {
    "name": "org.hibernate.query.Query"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.QueryLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaDelete"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaUpdate"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsert"
        ]
      },
      {
        "name": "createMutationQuery",
        "parameterTypes": [
          "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
        ]
      },
      {
        "name": "createNamedMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNamedSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeMutationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "createNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "jakarta.persistence.criteria.CriteriaQuery"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createSelectionQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedNativeQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.SelectionQuery"
  },
  {
    "name": "org.hibernate.query.TypedParameterValue"
  },
  {
    "name": "org.hibernate.query.criteria.HibernateCriteriaBuilder"
  },
  {
    "name": "org.hibernate.query.criteria.JpaCriteriaInsert"
  },
  {
    "name": "org.hibernate.query.criteria.JpaCriteriaInsertSelect"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en"
  },
  {
    "name": "org.hibernate.query.hql.HqlLogging_$logger_en_VN"
  },
  {
    "name": "org.hibernate.query.sqm.mutation.internal.SqmMultiTableMutationStrategyProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.relational.SchemaManager"
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.internal.ParameterMarkerStrategyStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.ast.tree.SqlAstTreeLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.exec.SqlExecLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.LoadingLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en"
  },
  {
    "name": "org.hibernate.sql.results.ResultsLogger_$logger_en_VN"
  },
  {
    "name": "org.hibernate.sql.results.jdbc.internal.JdbcValuesMappingProducerProviderStandard",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.HibernateMetrics"
  },
  {
    "name": "org.hibernate.stat.SessionStatistics"
  },
  {
    "name": "org.hibernate.stat.Statistics"
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.hibernate.type.SqlTypes",
    "allPublicFields": true
  },
  {
    "name": "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator"
  },
  {
    "name": "org.hsqldb.jdbc.JDBCDriver"
  },
  {
    "name": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
  },
  {
    "name": "org.influxdb.InfluxDB"
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.ddd.annotation.Identity"
  },
  {
    "name": "org.jmolecules.ddd.types.Association"
  },
  {
    "name": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
  },
  {
    "name": "org.jooq.DSLContext"
  },
  {
    "name": "org.locationtech.jts.geom.Geometry"
  },
  {
    "name": "org.neo4j.driver.Driver"
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.postgresql.core.QueryExecutorCloseAction",
    "fields": [
      {
        "name": "pgStream"
      }
    ]
  },
  {
    "name": "org.postgresql.jdbc.PgStatement",
    "fields": [
      {
        "name": "cancelTimerTask"
      },
      {
        "name": "isClosed"
      },
      {
        "name": "statementState"
      }
    ]
  },
  {
    "name": "org.postgresql.util.PGobject"
  },
  {
    "name": "org.quartz.Scheduler"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.LoggerFactory"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "log",
        "parameterTypes": [
          "org.slf4j.Marker",
          "java.lang.String",
          "int",
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.api.OpenApiResourceNotFoundException"
  },
  {
    "name": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.conditions.SpecPropertiesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "additionalModelsConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "fileSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "genericReturnTypeParser",
        "parameterTypes": []
      },
      {
        "name": "localSpringDocParameterNameDiscoverer",
        "parameterTypes": []
      },
      {
        "name": "modelConverterRegistrar",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "openAPIBuilder",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.properties.SpringDocConfigProperties",
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "operationBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.service.RequestBodyService",
          "org.springdoc.core.service.SecurityService",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "parameterBuilder",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider",
          "java.util.Optional"
        ]
      },
      {
        "name": "polymorphicModelConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "propertyResolverUtils",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ConfigurableBeanFactory",
          "org.springframework.context.MessageSource",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      },
      {
        "name": "requestBodyBuilder",
        "parameterTypes": [
          "org.springdoc.core.service.GenericParameterService",
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "responseSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "schemaPropertyDeprecatingConverter",
        "parameterTypes": []
      },
      {
        "name": "securityParser",
        "parameterTypes": [
          "org.springdoc.core.utils.PropertyResolverUtils"
        ]
      },
      {
        "name": "springDocCustomizers",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "springDocProviders",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      },
      {
        "name": "springdocObjectMapperProvider",
        "parameterTypes": [
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.configuration.SpringDocConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "queryDslQuerydslPredicateOperationCustomizer",
        "parameterTypes": [
          "java.util.Optional",
          "org.springdoc.core.properties.SpringDocConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "springDataWebPropertiesProvider",
        "parameterTypes": [
          "java.util.Optional"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webFluxSupportConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webConversionServiceProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "delegatingMethodParameterCustomizer",
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional"
        ]
      },
      {
        "name": "pageableOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocSortConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "sortOpenAPIConverter",
        "parameterTypes": [
          "org.springdoc.core.providers.ObjectMapperProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.SpringDocUIConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Optional"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.configuration.hints.SpringDocSecurityHints"
  },
  {
    "name": "org.springdoc.core.converters.AdditionalModelsConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.FileSupportConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.ModelConverterRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.PageableOpenAPIConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.PolymorphicModelConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.PropertyCustomizingConverter"
  },
  {
    "name": "org.springdoc.core.converters.ResponseSupportConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.SortOpenAPIConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.converters.WebFluxSupportConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.swagger.v3.core.converter.AnnotatedType",
          "io.swagger.v3.core.converter.ModelConverterContext",
          "java.util.Iterator"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.core.MethodParameter"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer$DefaultSort"
  },
  {
    "name": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
  },
  {
    "name": "org.springdoc.core.customizers.GlobalOperationCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.OpenApiBuilderCustomizer"
  },
  {
    "name": "org.springdoc.core.customizers.OperationCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springdoc.core.customizers.PropertyCustomizer"
  },
  {
    "name": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "io.swagger.v3.oas.models.Operation",
          "org.springframework.web.method.HandlerMethod"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.customizers.SpringDocCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getParameterNames",
        "parameterTypes": [
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.models.GroupedOpenApi"
  },
  {
    "name": "org.springdoc.core.models.MethodAttributes"
  },
  {
    "name": "org.springdoc.core.models.ParameterInfo"
  },
  {
    "name": "org.springdoc.core.models.RequestBodyInfo"
  },
  {
    "name": "org.springdoc.core.parsers.ReturnTypeParser",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getReturnType",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConfigUrl",
        "parameterTypes": []
      },
      {
        "name": "getDeepLinking",
        "parameterTypes": []
      },
      {
        "name": "getDefaultModelExpandDepth",
        "parameterTypes": []
      },
      {
        "name": "getDefaultModelRendering",
        "parameterTypes": []
      },
      {
        "name": "getDefaultModelsExpandDepth",
        "parameterTypes": []
      },
      {
        "name": "getDisplayOperationId",
        "parameterTypes": []
      },
      {
        "name": "getDisplayRequestDuration",
        "parameterTypes": []
      },
      {
        "name": "getDocExpansion",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getGroupsOrder",
        "parameterTypes": []
      },
      {
        "name": "getLayout",
        "parameterTypes": []
      },
      {
        "name": "getMaxDisplayedTags",
        "parameterTypes": []
      },
      {
        "name": "getOauth2RedirectUrl",
        "parameterTypes": []
      },
      {
        "name": "getOperationsSorter",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getPersistAuthorization",
        "parameterTypes": []
      },
      {
        "name": "getQueryConfigEnabled",
        "parameterTypes": []
      },
      {
        "name": "getShowCommonExtensions",
        "parameterTypes": []
      },
      {
        "name": "getShowExtensions",
        "parameterTypes": []
      },
      {
        "name": "getSupportedSubmitMethods",
        "parameterTypes": []
      },
      {
        "name": "getTagsSorter",
        "parameterTypes": []
      },
      {
        "name": "getTryItOutEnabled",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      },
      {
        "name": "getUrlsPrimaryName",
        "parameterTypes": []
      },
      {
        "name": "getValidatorUrl",
        "parameterTypes": []
      },
      {
        "name": "getWithCredentials",
        "parameterTypes": []
      },
      {
        "name": "setConfigUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeepLinking",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultModelExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultModelRendering",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultModelsExpandDepth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisplayOperationId",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDisplayRequestDuration",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDocExpansion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupsOrder",
        "parameterTypes": [
          "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDisplayedTags",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOauth2RedirectUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperationsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistAuthorization",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setQueryConfigEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowCommonExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShowExtensions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportedSubmitMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagsSorter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTryItOutEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrls",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUrlsPrimaryName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidatorUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWithCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
  },
  {
    "name": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
  },
  {
    "name": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigParameters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springdoc.core.properties.SwaggerUiConfigProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
  },
  {
    "name": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.JavadocProvider"
  },
  {
    "name": "org.springdoc.core.providers.ObjectMapperProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.SpringDocProviders",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.providers.WebConversionServiceProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.GenericParameterService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.OpenAPIService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.OperationService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.RequestBodyService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.service.SecurityService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springdoc.core.utils.PropertyResolverUtils",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.AmqpException"
  },
  {
    "name": "org.springframework.amqp.core.AbstractDeclarable",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addArgument",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getArguments",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringAdmins",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDeclarationExceptions",
        "parameterTypes": []
      },
      {
        "name": "removeArgument",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAdminsThatShouldDeclare",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setIgnoreDeclarationExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShouldDeclare",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shouldDeclare",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.core.AbstractExchange",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAutoDelete",
        "parameterTypes": []
      },
      {
        "name": "isDelayed",
        "parameterTypes": []
      },
      {
        "name": "isDurable",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setDelayed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.core.AcknowledgeMode"
  },
  {
    "name": "org.springframework.amqp.core.Address"
  },
  {
    "name": "org.springframework.amqp.core.AmqpAdmin",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.core.AmqpTemplate",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.core.Binding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.core.Binding$DestinationType"
  },
  {
    "name": "org.springframework.amqp.core.Declarable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.core.DeclarableCustomizer"
  },
  {
    "name": "org.springframework.amqp.core.Declarables"
  },
  {
    "name": "org.springframework.amqp.core.Exchange",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.core.Message"
  },
  {
    "name": "org.springframework.amqp.core.MessageListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "containerAckMode",
        "parameterTypes": [
          "org.springframework.amqp.core.AcknowledgeMode"
        ]
      },
      {
        "name": "isAsyncReplies",
        "parameterTypes": []
      },
      {
        "name": "onMessageBatch",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.core.MessagePostProcessor"
  },
  {
    "name": "org.springframework.amqp.core.MessageProperties"
  },
  {
    "name": "org.springframework.amqp.core.Queue",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.core.QueueInformation"
  },
  {
    "name": "org.springframework.amqp.core.ReceiveAndReplyCallback"
  },
  {
    "name": "org.springframework.amqp.core.ReplyToAddressCallback"
  },
  {
    "name": "org.springframework.amqp.core.ReturnedMessage"
  },
  {
    "name": "org.springframework.amqp.core.TopicExchange",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.annotation.EnableRabbit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.amqp.rabbit.annotation.MultiRabbitBootstrapConfiguration",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.annotation.RabbitListenerConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.batch.BatchingStrategy"
  },
  {
    "name": "org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createListenerContainer",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.listener.RabbitListenerEndpoint"
        ]
      },
      {
        "name": "initializeContainer",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer",
          "org.springframework.amqp.rabbit.listener.RabbitListenerEndpoint"
        ]
      },
      {
        "name": "setAcknowledgeMode",
        "parameterTypes": [
          "org.springframework.amqp.core.AcknowledgeMode"
        ]
      },
      {
        "name": "setAfterReceivePostProcessors",
        "parameterTypes": [
          "org.springframework.amqp.core.MessagePostProcessor[]"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBatchListener",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBatchingStrategy",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.batch.BatchingStrategy"
        ]
      },
      {
        "name": "setChannelTransacted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConnectionFactory",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "setConsumerTagStrategy",
        "parameterTypes": [
          "org.springframework.amqp.support.ConsumerTagStrategy"
        ]
      },
      {
        "name": "setContainerCustomizer",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.config.ContainerCustomizer"
        ]
      },
      {
        "name": "setDeBatchingEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.util.ErrorHandler"
        ]
      },
      {
        "name": "setFailedDeclarationRetryInterval",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setForceStop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGlobalQos",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIdleEventInterval",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMessageAckListener",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.listener.MessageAckListener"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.amqp.support.converter.MessageConverter"
        ]
      },
      {
        "name": "setMismatchedQueuesFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMissingQueuesFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setObservationConvention",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.support.micrometer.RabbitListenerObservationConvention"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrefetchCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRecoveryBackOff",
        "parameterTypes": [
          "org.springframework.util.backoff.BackOff"
        ]
      },
      {
        "name": "setRecoveryInterval",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTaskExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.config.BaseRabbitListenerContainerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdviceChain",
        "parameterTypes": []
      },
      {
        "name": "setAdviceChain",
        "parameterTypes": [
          "org.aopalliance.aop.Advice[]"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBeforeSendReplyPostProcessors",
        "parameterTypes": [
          "org.springframework.amqp.core.MessagePostProcessor[]"
        ]
      },
      {
        "name": "setDefaultRequeueRejected",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMicrometerEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setObservationEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReplyPostProcessorProvider",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setReplyRecoveryCallback",
        "parameterTypes": [
          "org.springframework.retry.RecoveryCallback"
        ]
      },
      {
        "name": "setRetryTemplate",
        "parameterTypes": [
          "org.springframework.retry.support.RetryTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.config.ContainerCustomizer"
  },
  {
    "name": "org.springframework.amqp.rabbit.config.DirectRabbitListenerContainerFactory"
  },
  {
    "name": "org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addChannelListener",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ChannelListener"
        ]
      },
      {
        "name": "clearConnectionListeners",
        "parameterTypes": []
      },
      {
        "name": "getCloseTimeout",
        "parameterTypes": []
      },
      {
        "name": "getHost",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getPublisherConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "getRabbitConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getVirtualHost",
        "parameterTypes": []
      },
      {
        "name": "hasPublisherConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "removeConnectionListener",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionListener"
        ]
      },
      {
        "name": "setAddressResolver",
        "parameterTypes": [
          "com.rabbitmq.client.AddressResolver"
        ]
      },
      {
        "name": "setAddressShuffleMode",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory$AddressShuffleMode"
        ]
      },
      {
        "name": "setAddresses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChannelListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCloseExceptionLogger",
        "parameterTypes": [
          "org.springframework.amqp.support.ConditionalExceptionLogger"
        ]
      },
      {
        "name": "setCloseTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectionCreatingBackOff",
        "parameterTypes": [
          "org.springframework.util.backoff.BackOff"
        ]
      },
      {
        "name": "setConnectionNameStrategy",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionNameStrategy"
        ]
      },
      {
        "name": "setConnectionThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRecoveryListener",
        "parameterTypes": [
          "com.rabbitmq.client.RecoveryListener"
        ]
      },
      {
        "name": "setRequestedHeartBeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVirtualHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shutdownCompleted",
        "parameterTypes": [
          "com.rabbitmq.client.ShutdownSignalException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory$AddressShuffleMode"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.CachingConnectionFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConnectionListener",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionListener"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isPublisherConfirms",
        "parameterTypes": []
      },
      {
        "name": "isPublisherReturns",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "isSimplePublisherConfirms",
        "parameterTypes": []
      },
      {
        "name": "resetConnection",
        "parameterTypes": []
      },
      {
        "name": "setConnectionListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPublisherConnectionFactory",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CacheMode"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ChannelListener"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ChannelProxy"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.Connection"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ConnectionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ConnectionListener"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ConnectionNameStrategy"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.ConnectionProxy"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.CorrelationData"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.PendingConfirm"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.PublisherCallbackChannel$Listener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.PublisherCallbackChannelFactory"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.RabbitAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "isChannelTransacted",
        "parameterTypes": []
      },
      {
        "name": "setChannelTransacted",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.RabbitConnectionFactoryBean"
  },
  {
    "name": "org.springframework.amqp.rabbit.connection.RabbitResourceHolder"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.ChannelCallback"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.CorrelationDataPostProcessor"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.DeclarationExceptionEvent"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitAdmin",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "declareBinding",
        "parameterTypes": [
          "org.springframework.amqp.core.Binding"
        ]
      },
      {
        "name": "declareExchange",
        "parameterTypes": [
          "org.springframework.amqp.core.Exchange"
        ]
      },
      {
        "name": "declareQueue",
        "parameterTypes": []
      },
      {
        "name": "declareQueue",
        "parameterTypes": [
          "org.springframework.amqp.core.Queue"
        ]
      },
      {
        "name": "deleteExchange",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "deleteQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "deleteQueue",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getManualDeclarableSet",
        "parameterTypes": []
      },
      {
        "name": "getManualDeclarables",
        "parameterTypes": []
      },
      {
        "name": "getQueueInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getQueueProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "purgeQueue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "purgeQueue",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "removeBinding",
        "parameterTypes": [
          "org.springframework.amqp.core.Binding"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitMessageOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitMessagingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Map",
          "java.lang.Class",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": []
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.core.RabbitOperations$OperationsCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitOperations$OperationsCallback"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.amqp.rabbit.connection.CorrelationData",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.amqp.core.MessagePostProcessor",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "convertSendAndReceiveAsType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "correlationConvertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.core.ChannelCallback"
        ]
      },
      {
        "name": "expectedQueueNames",
        "parameterTypes": []
      },
      {
        "name": "getUUID",
        "parameterTypes": []
      },
      {
        "name": "handleConfirm",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.PendingConfirm",
          "boolean"
        ]
      },
      {
        "name": "handleReturn",
        "parameterTypes": [
          "com.rabbitmq.client.Return"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.core.RabbitOperations$OperationsCallback",
          "com.rabbitmq.client.ConfirmCallback",
          "com.rabbitmq.client.ConfirmCallback"
        ]
      },
      {
        "name": "isConfirmListener",
        "parameterTypes": []
      },
      {
        "name": "isReturnListener",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onMessage",
        "parameterTypes": [
          "org.springframework.amqp.core.Message",
          "com.rabbitmq.client.Channel"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": []
      },
      {
        "name": "receive",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": []
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "long",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "org.springframework.core.ParameterizedTypeReference"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.ReceiveAndReplyCallback"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.ReceiveAndReplyCallback",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.ReceiveAndReplyCallback",
          "org.springframework.amqp.core.ReplyToAddressCallback"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "org.springframework.amqp.core.ReceiveAndReplyCallback"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "org.springframework.amqp.core.ReceiveAndReplyCallback",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "receiveAndReply",
        "parameterTypes": [
          "org.springframework.amqp.core.ReceiveAndReplyCallback",
          "org.springframework.amqp.core.ReplyToAddressCallback"
        ]
      },
      {
        "name": "revoke",
        "parameterTypes": [
          "com.rabbitmq.client.Channel"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.amqp.core.Message",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.Message",
          "org.springframework.amqp.rabbit.connection.CorrelationData"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionFactory",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "waitForConfirms",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "waitForConfirmsOrDie",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitTemplate$ConfirmCallback"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitTemplate$PendingReply"
  },
  {
    "name": "org.springframework.amqp.rabbit.core.RabbitTemplate$ReturnsCallback"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.DirectReplyToMessageListenerContainer"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.MessageAckListener"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.MessageListenerContainer"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.RabbitListenerContainerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createListenerContainer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.RabbitListenerEndpoint"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.RabbitListenerEndpointRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"
  },
  {
    "name": "org.springframework.amqp.rabbit.listener.api.ChannelAwareMessageListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onMessage",
        "parameterTypes": [
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "onMessageBatch",
        "parameterTypes": [
          "java.util.List",
          "com.rabbitmq.client.Channel"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.rabbit.retry.MessageRecoverer"
  },
  {
    "name": "org.springframework.amqp.rabbit.support.Delivery"
  },
  {
    "name": "org.springframework.amqp.rabbit.support.ListenerContainerAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.rabbit.support.MessagePropertiesConverter"
  },
  {
    "name": "org.springframework.amqp.rabbit.support.micrometer.RabbitListenerObservationConvention"
  },
  {
    "name": "org.springframework.amqp.rabbit.support.micrometer.RabbitMessageSenderContext"
  },
  {
    "name": "org.springframework.amqp.rabbit.support.micrometer.RabbitTemplateObservationConvention"
  },
  {
    "name": "org.springframework.amqp.support.ConditionalExceptionLogger"
  },
  {
    "name": "org.springframework.amqp.support.ConsumerTagStrategy"
  },
  {
    "name": "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.amqp.core.Message"
        ]
      },
      {
        "name": "fromMessage",
        "parameterTypes": [
          "org.springframework.amqp.core.Message",
          "java.lang.Object"
        ]
      },
      {
        "name": "getClassMapper",
        "parameterTypes": []
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeMapper",
        "parameterTypes": []
      },
      {
        "name": "getTypePrecedence",
        "parameterTypes": []
      },
      {
        "name": "isTypeMapperSet",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysConvertToInferredType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAssumeSupportedContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setClassMapper",
        "parameterTypes": [
          "org.springframework.amqp.support.converter.ClassMapper"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJavaTypeMapper",
        "parameterTypes": [
          "org.springframework.amqp.support.converter.Jackson2JavaTypeMapper"
        ]
      },
      {
        "name": "setNullAsOptionalEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedContentType",
        "parameterTypes": [
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "setTypePrecedence",
        "parameterTypes": [
          "org.springframework.amqp.support.converter.Jackson2JavaTypeMapper$TypePrecedence"
        ]
      },
      {
        "name": "setUseProjectionForInterfaces",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.support.converter.AbstractMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setCreateMessageIds",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessageProperties"
        ]
      },
      {
        "name": "toMessage",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.amqp.core.MessageProperties",
          "java.lang.reflect.Type"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.amqp.support.converter.ClassMapper"
  },
  {
    "name": "org.springframework.amqp.support.converter.Jackson2JavaTypeMapper"
  },
  {
    "name": "org.springframework.amqp.support.converter.Jackson2JavaTypeMapper$TypePrecedence"
  },
  {
    "name": "org.springframework.amqp.support.converter.Jackson2JsonMessageConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.amqp.support.converter.MessageConversionException"
  },
  {
    "name": "org.springframework.amqp.support.converter.MessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.amqp.support.converter.SmartMessageConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isPerInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.TargetSource"
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AopConfigException"
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject"
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aot.generate.Generated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.generate.GenerationContext"
  },
  {
    "name": "org.springframework.aot.hint.RuntimeHints"
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
  },
  {
    "name": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
  },
  {
    "name": "org.springframework.batch.core.launch.JobLauncher"
  },
  {
    "name": "org.springframework.beans.BeansException"
  },
  {
    "name": "org.springframework.beans.TypeConverter"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider"
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Configurable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isBeanExcludedFromAotProcessing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractDependencyInjectionAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$2$1ea6722c",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$afterReturning$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$3$6aa27052",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ajc$before$org_springframework_beans_factory_aspectj_AbstractDependencyInjectionAspect$1$e854fa65",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AbstractInterfaceDrivenDependencyInjectionAspect$ConfigurableDeserializationSupport"
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "aspectOf",
        "parameterTypes": []
      },
      {
        "name": "configureBean",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.aspectj.ConfigurableObject",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.BeanDefinition"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "toObjectFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.RegisteredBean"
  },
  {
    "name": "org.springframework.boot.ApplicationArguments"
  },
  {
    "name": "org.springframework.boot.ApplicationRunner",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.Runner",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.amqp.RabbitHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventRepository"
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.amqp.RabbitHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rabbitHealthContributor",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "beansEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cachesEndpoint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cachesEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.cache.CachesEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ConditionsDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conditionsReportEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesReportEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "configurationPropertiesReportEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getRootPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": []
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getExposure",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInclude",
        "parameterTypes": []
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "serverCodecConfigurerEndpointObjectMapperBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointReactiveHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "environmentEndpoint",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "environmentEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.env.EnvironmentEndpoint",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getPrimary",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupMembershipValidator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
          "org.springframework.boot.actuate.health.HealthContributorRegistry"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getShowDetails",
        "parameterTypes": []
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveHealthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "healthEndpointWebFluxHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveHealthContributorRegistry",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "infoEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loggersEndpoint",
        "parameterTypes": [
          "org.springframework.boot.logging.LoggingSystem",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "heapDumpWebEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dumpEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "meterRegistryCloser",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": []
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsEndpoint",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": []
      },
      {
        "name": "processorMetrics",
        "parameterTypes": []
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitConnectionFactoryMetricsPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.amqp.RabbitMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rabbitConnectionFactoryMetricsPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "prometheusConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
        ]
      },
      {
        "name": "prometheusMeterRegistry",
        "parameterTypes": [
          "io.micrometer.prometheusmetrics.PrometheusConfig",
          "io.prometheus.metrics.model.registry.PrometheusRegistry",
          "io.micrometer.core.instrument.Clock",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "prometheusRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "prometheusEndpoint",
        "parameterTypes": [
          "io.prometheus.metrics.model.registry.PrometheusRegistry",
          "io.micrometer.prometheusmetrics.PrometheusConfig"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$HistogramFlavor"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "descriptions",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "prometheusProperties",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "step",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.r2dbc.ConnectionPoolMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindConnectionPoolsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "eagerTaskExecutorMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationRegistry",
        "parameterTypes": []
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "propertiesObservationFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observedAspect",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "test",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observationWebClientCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      },
      {
        "name": "defaultServerRequestObservationConvention",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.r2dbc.ConnectionFactoryHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "r2dbcHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.sbom.SbomProperties"
        ]
      },
      {
        "name": "sbomEndpoint",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "sbomEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.sbom.SbomEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledTasksEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "observabilitySchedulingConfigurer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configureTasks",
        "parameterTypes": [
          "org.springframework.scheduling.config.ScheduledTaskRegistrar"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mappingsEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ReactiveWebConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dispatcherHandlerMappingDescriptionProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebChildContextFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator"
  },
  {
    "name": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator"
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$BeansDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheEntryDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CachesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesBeanDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ContextConfigurationPropertiesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ApiVersion"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointId"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.Operation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.OperationType"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.SecurityContext"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.Show"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ShowEditor"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createOperationKey",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Operation"
        ]
      },
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "mapParameterValue",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameter",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.EndpointId",
          "org.springframework.boot.actuate.endpoint.OperationType",
          "org.springframework.boot.actuate.endpoint.invoke.OperationParameters",
          "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebOperation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation"
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentEntryDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySummaryDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractReactiveHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth"
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "registerContributor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Health"
  },
  {
    "name": "org.springframework.boot.actuate.health.Health$Builder"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroup"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
        ]
      },
      {
        "name": "getAllWithAdditionalPath",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthIndicator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getStatusCode",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.Status"
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getAggregateStatus",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.Status[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.EnvironmentInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.GitInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.JavaInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.OsInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.info.ProcessInfoContributor"
  },
  {
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggerLevelsDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint$HeapDumper"
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint$HeapDumperUnavailableException"
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint$ThreadDumpDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "repositoryTags",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterInvocation",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusOutputFormat"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusSimpleclientScrapeEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.WebClient$Builder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.r2dbc.ConnectionFactoryHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpoint$Sboms"
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpointWebExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomEndpointWebExtension$SbomType"
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.sbom.SbomProperties$Sbom"
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$ScheduledTasksDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
  },
  {
    "name": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ApplicationMappingsDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ContextMappingsDescriptor"
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlersMappingDescriptionProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "describeMappings",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "getMappingName",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$Enabled",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.AbstractConnectionFactoryConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory",
          "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.AbstractRabbitListenerContainerFactoryConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory",
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "setTaskExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.CachingConnectionFactoryConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.ConnectionFactoryCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.DirectRabbitListenerContainerFactoryConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory",
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.PropertiesRabbitConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getAddresses",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getVirtualHost",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
        ]
      },
      {
        "name": "directRabbitListenerContainerFactoryConfigurer",
        "parameterTypes": []
      },
      {
        "name": "simpleRabbitListenerContainerFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer",
          "org.springframework.amqp.rabbit.connection.ConnectionFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleRabbitListenerContainerFactoryConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration$EnableRabbitConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$MessagingTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rabbitMessagingTemplate",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.core.RabbitTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitConnectionFactoryCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
        ]
      },
      {
        "name": "rabbitConnectionDetails",
        "parameterTypes": []
      },
      {
        "name": "rabbitConnectionFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.RabbitConnectionFactoryBeanConfigurer",
          "org.springframework.boot.autoconfigure.amqp.CachingConnectionFactoryConfigurer",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "rabbitConnectionFactoryBeanConfigurer",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.amqp.RabbitConnectionDetails",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "rabbitConnectionFactoryConfigurer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.RabbitConnectionDetails",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "amqpAdmin",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "rabbitTemplate",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.RabbitTemplateConfigurer",
          "org.springframework.amqp.rabbit.connection.ConnectionFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "rabbitTemplateConfigurer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.amqp.RabbitProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFirstAddress",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitConnectionDetails$Address"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitConnectionFactoryBeanConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVirtualHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$AmqpContainer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Stream"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitStreamConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitTemplateConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.RabbitTemplateCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory",
          "org.springframework.amqp.rabbit.connection.ConnectionFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cacheAutoConfigurationValidator",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.cache.CacheProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "cacheManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cacheManager",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.cache.CacheProperties",
          "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$JpaRepositoriesImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.r2dbc.core.DatabaseClient"
        ]
      },
      {
        "name": "r2dbcConverter",
        "parameterTypes": [
          "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions"
        ]
      },
      {
        "name": "r2dbcCustomConversions",
        "parameterTypes": []
      },
      {
        "name": "r2dbcEntityTemplate",
        "parameterTypes": [
          "org.springframework.data.r2dbc.convert.R2dbcConverter"
        ]
      },
      {
        "name": "r2dbcManagedTypes",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "r2dbcMappingContext",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
          "org.springframework.data.relational.RelationalManagedTypes"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfigureRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      },
      {
        "name": "jsonMixinModuleEntries",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceCheckpointRestoreConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$HibernateRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings"
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceManagedTypes",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$GenericConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "connectionFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PooledConnectionFactoryCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "r2dbcDatabaseClient",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertiesR2dbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration$PropertiesR2dbcConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnectionFactoryOptions",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "connectionFactoryTransactionManager",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorResourceFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$JwtConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$OpaqueTokenConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "r2dbcScriptDatabaseInitializer",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": []
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isExcluded",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.beans.factory.config.BeanDefinition",
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskScheduler",
        "parameterTypes": [
          "org.springframework.boot.task.TaskSchedulerBuilder",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thread.Threading"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionalOperator",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getTomcat",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getThreads",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ResourceHandlerRegistrationCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "configureBlockingExecution",
        "parameterTypes": [
          "org.springframework.web.reactive.config.BlockingExecutionConfigurer"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebHttpHandlerBuilderCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setMessageReaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessageWriters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setViewResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createClientHttpConnector",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorClientHttpConnectorFactory",
        "parameterTypes": [
          "org.springframework.http.client.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createClientHttpConnector",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClientSsl",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.WebClient$Builder"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityChangeEvent"
  },
  {
    "name": "org.springframework.boot.availability.AvailabilityState"
  },
  {
    "name": "org.springframework.boot.availability.LivenessState"
  },
  {
    "name": "org.springframework.boot.availability.ReadinessState"
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudPlatform"
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.ApplicationReadyEvent"
  },
  {
    "name": "org.springframework.boot.context.event.ApplicationStartedEvent"
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.PropertyMapper"
  },
  {
    "name": "org.springframework.boot.context.properties.bind.BindResult"
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Binder"
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Nested",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationProperty"
  },
  {
    "name": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.info.BuildProperties"
  },
  {
    "name": "org.springframework.boot.info.GitProperties"
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponent$Scope"
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
  },
  {
    "name": "org.springframework.boot.jdbc.DataSourceBuilder"
  },
  {
    "name": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata"
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.launch.LaunchedClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.LogLevel"
  },
  {
    "name": "org.springframework.boot.logging.LogLevelEditor"
  },
  {
    "name": "org.springframework.boot.logging.LoggerGroup"
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystem"
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder"
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "initializeDatabase",
        "parameterTypes": []
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
  },
  {
    "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationMode"
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addBundleUpdateHandler",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "updateBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.NoSuchSslBundleException"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundle"
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
  },
  {
    "name": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
    "methods": [
      {
        "name": "toMetadataReaderFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.codec.CodecCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.http.server.reactive.HttpHandler"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyWebServer"
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
  },
  {
    "name": "org.springframework.boot.web.error.ErrorAttributeOptions"
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebApplicationContext"
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "storeErrorInformation",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.filter.OrderedHiddenHttpMethodFilter"
  },
  {
    "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslBundles",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression"
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie"
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPage"
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2"
  },
  {
    "name": "org.springframework.boot.web.server.MimeMappings"
  },
  {
    "name": "org.springframework.boot.web.server.Shutdown"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl"
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
  },
  {
    "name": "org.springframework.boot.web.server.WebServer"
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.CacheManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
  },
  {
    "name": "org.springframework.cache.annotation.CacheAnnotationParser"
  },
  {
    "name": "org.springframework.cache.annotation.CachingConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.CachingConfigurer"
  },
  {
    "name": "org.springframework.cache.annotation.EnableCaching",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "cacheAdvisor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource",
          "org.springframework.cache.interceptor.CacheInterceptor"
        ]
      },
      {
        "name": "cacheInterceptor",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "cacheOperationSource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.caffeine.CaffeineCache"
  },
  {
    "name": "org.springframework.cache.concurrent.ConcurrentMapCacheManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheOperationSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cache.jcache.JCacheCache"
  },
  {
    "name": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
  },
  {
    "name": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
  },
  {
    "name": "org.springframework.cloud.sleuth.autoconfig.instrument.jdbc.P6SpyConfiguration"
  },
  {
    "name": "org.springframework.context.ApplicationContext"
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEvent"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisher"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsAsyncExecution",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ConfigurableApplicationContext"
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSource"
  },
  {
    "name": "org.springframework.context.PayloadApplicationEvent"
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AnnotationConfigRegistry"
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.ContextClosedEvent"
  },
  {
    "name": "org.springframework.context.event.ContextRefreshedEvent"
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getListenerId",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.i18n.LocaleContext"
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
  },
  {
    "name": "org.springframework.context.support.MessageSourceAccessor"
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.DefaultParameterNameDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.MethodParameter"
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ParameterNameDiscoverer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ParameterizedTypeReference"
  },
  {
    "name": "org.springframework.core.PrioritizedParameterNameDiscoverer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDiscoverer",
        "parameterTypes": [
          "org.springframework.core.ParameterNameDiscoverer"
        ]
      },
      {
        "name": "getParameterNames",
        "parameterTypes": [
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapter"
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.ReactiveTypeDescriptor"
  },
  {
    "name": "org.springframework.core.ResolvableType"
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.MergedAnnotation"
  },
  {
    "name": "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.codec.Encoder"
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.TypeDescriptor"
  },
  {
    "name": "org.springframework.core.convert.converter.Converter"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterFactory"
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter"
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.DefaultConversionService"
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.env.ConfigurableEnvironment"
  },
  {
    "name": "org.springframework.core.env.EnumerablePropertySource"
  },
  {
    "name": "org.springframework.core.env.Environment"
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.MutablePropertySources"
  },
  {
    "name": "org.springframework.core.env.PropertySource"
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.ResourceLoader"
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitCompletable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.task.SimpleAsyncTaskExecutor"
  },
  {
    "name": "org.springframework.core.task.TaskDecorator"
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.type.AnnotationMetadata"
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.dao.DataAccessException"
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.annotation.CreatedBy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.CreatedDate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.LastModifiedBy",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.LastModifiedDate",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.auditing.AuditableBeanWrapper"
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setAuditorAware",
        "parameterTypes": [
          "org.springframework.data.domain.AuditorAware"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDateTimeForNow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDateTimeProvider",
        "parameterTypes": [
          "org.springframework.data.auditing.DateTimeProvider"
        ]
      },
      {
        "name": "setModifyOnCreation",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.Auditor"
  },
  {
    "name": "org.springframework.data.auditing.CurrentDateTimeProvider",
    "methods": [
      {
        "name": "toDateTimeProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.DateTimeProvider",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.auditing.CurrentDateTimeProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.cassandra.ReactiveSession"
  },
  {
    "name": "org.springframework.data.convert.CustomConversions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPropertyValueConversions",
        "parameterTypes": []
      },
      {
        "name": "getSimpleTypeHolder",
        "parameterTypes": []
      },
      {
        "name": "hasCustomReadTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "hasCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasValueConverter",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "registerConvertersIn",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.convert.CustomConversions$ConverterRegistration"
  },
  {
    "name": "org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
  },
  {
    "name": "org.springframework.data.convert.CustomConversions$StoreConversions"
  },
  {
    "name": "org.springframework.data.convert.EntityReader",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.convert.EntityWriter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.PropertyValueConversions"
  },
  {
    "name": "org.springframework.data.convert.ReadingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.convert.WritingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.AuditorAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.huyvu.lightmessage.AuditConfiguration$$Lambda/0x0000007001b87848"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "com.huyvu.lightmessage.AuditConfiguration$$Lambda/0x0000007001b87848"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "com.huyvu.lightmessage.AuditConfiguration$$Lambda/0x0000007001b87848"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "com.huyvu.lightmessage.AuditConfiguration$$Lambda/0x0000007001b87848"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Example"
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toList",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Page"
  },
  {
    "name": "org.springframework.data.domain.Pageable"
  },
  {
    "name": "org.springframework.data.domain.Sort"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
  },
  {
    "name": "org.springframework.data.envers.repository.config.EnableEnversRepositories"
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAuditingHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "toMappingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentEntityImpl"
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaPersistentProperty"
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Modifying",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaAuditing",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaAuditingRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension$JpaRepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getEntityGraph",
        "parameterTypes": []
      },
      {
        "name": "getLockModeType",
        "parameterTypes": []
      },
      {
        "name": "getQueryHints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryConfigurationAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "setEntityPathResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "setMappingContext",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      },
      {
        "name": "setQueryMethodFactory",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.JpaEntityInformation",
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIdInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.jpa.domain.Specification"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getReferenceById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAllAndFlush",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEscapeCharacter",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.query.EscapeCharacter"
        ]
      },
      {
        "name": "setProjectionFactory",
        "parameterTypes": [
          "org.springframework.data.projection.ProjectionFactory"
        ]
      },
      {
        "name": "setRepositoryMethodMetadata",
        "parameterTypes": [
          "org.springframework.data.jpa.repository.support.CrudMethodMetadata"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.ldap.repository.LdapRepository"
  },
  {
    "name": "org.springframework.data.mapping.MappingException"
  },
  {
    "name": "org.springframework.data.mapping.PersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.PersistentProperty"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPathAccessor"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyPaths"
  },
  {
    "name": "org.springframework.data.mapping.PropertyPath"
  },
  {
    "name": "org.springframework.data.mapping.callback.EntityCallback",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.mapping.callback.ReactiveEntityCallbacks"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$ObjectInstantiator"
  },
  {
    "name": "org.springframework.data.mapping.model.EntityInstantiators"
  },
  {
    "name": "org.springframework.data.mapping.model.MutablePersistentEntity"
  },
  {
    "name": "org.springframework.data.mapping.model.ParameterValueProvider"
  },
  {
    "name": "org.springframework.data.mapping.model.Property"
  },
  {
    "name": "org.springframework.data.mapping.model.SimpleTypeHolder"
  },
  {
    "name": "org.springframework.data.mapping.model.ValueExpressionEvaluator"
  },
  {
    "name": "org.springframework.data.mongodb.core.MongoTemplate"
  },
  {
    "name": "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
  },
  {
    "name": "org.springframework.data.projection.EntityProjection"
  },
  {
    "name": "org.springframework.data.projection.EntityProjection$PropertyProjection"
  },
  {
    "name": "org.springframework.data.projection.EntityProjectionIntrospector"
  },
  {
    "name": "org.springframework.data.projection.ProjectionFactory"
  },
  {
    "name": "org.springframework.data.querydsl.EntityPathResolver"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
  },
  {
    "name": "org.springframework.data.r2dbc.convert.MappingR2dbcConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getArrayValue",
        "parameterTypes": [
          "org.springframework.data.relational.core.dialect.ArrayColumns",
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTargetType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "populateIdIfNecessary",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "io.r2dbc.spi.Row",
          "io.r2dbc.spi.RowMetadata"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toRowDocument",
        "parameterTypes": [
          "java.lang.Class",
          "io.r2dbc.spi.Readable",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.convert.R2dbcConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.core.FluentR2dbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class",
          "java.util.function.Function"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "getConverter",
        "parameterTypes": []
      },
      {
        "name": "getDataAccessStrategy",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseClient",
        "parameterTypes": []
      },
      {
        "name": "getRowsFetchSpec",
        "parameterTypes": [
          "org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec",
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "select",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "select",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "toR2dbcEntityOperations",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "org.springframework.data.relational.core.query.Update",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveDataAccessStrategy"
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveDeleteOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveDeleteOperation$ReactiveDelete"
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveInsertOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveInsertOperation$ReactiveInsert"
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveSelectOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveSelectOperation$ReactiveSelect"
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveUpdateOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveUpdateOperation$ReactiveUpdate"
  },
  {
    "name": "org.springframework.data.r2dbc.core.StatementMapper$SelectSpec"
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.DialectResolver$BuiltInDialectProvider",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.DialectResolver.BuiltInDialectProvider"
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.R2dbcDialect"
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.OutboundRow"
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.AfterConvertCallback",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.R2dbcRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setEntityOperations",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.SimpleR2dbcRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.relational.repository.query.RelationalEntityInformation",
          "org.springframework.data.r2dbc.core.R2dbcEntityOperations",
          "org.springframework.data.r2dbc.convert.R2dbcConverter"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.cache.RedisCache"
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionFactory"
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations"
  },
  {
    "name": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
  },
  {
    "name": "org.springframework.data.relational.RelationalManagedTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getConversions",
        "parameterTypes": []
      },
      {
        "name": "getEntityInstantiators",
        "parameterTypes": []
      },
      {
        "name": "getMappingContext",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.MappingRelationalConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createInstance",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getPropertyAccessor",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "introspectProjection",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "project",
        "parameterTypes": [
          "org.springframework.data.projection.EntityProjection",
          "org.springframework.data.relational.domain.RowDocument"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.data.relational.domain.RowDocument"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ConversionContext"
  },
  {
    "name": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ProjectingConversionContext"
  },
  {
    "name": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$RelationalPropertyValueProvider"
  },
  {
    "name": "org.springframework.data.relational.core.conversion.ObjectPath"
  },
  {
    "name": "org.springframework.data.relational.core.conversion.RelationalConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.conversion.RowDocumentAccessor"
  },
  {
    "name": "org.springframework.data.relational.core.dialect.ArrayColumns"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.AggregatePath"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.BasicRelationalPersistentProperty"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.NamingStrategy"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAggregatePath",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentPropertyPath"
        ]
      },
      {
        "name": "getAggregatePath",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
        ]
      },
      {
        "name": "isForceQuote",
        "parameterTypes": []
      },
      {
        "name": "isSingleQueryLoadingEnabled",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setForceQuote",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSingleQueryLoadingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSqlIdentifierSanitizer",
        "parameterTypes": [
          "org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
  },
  {
    "name": "org.springframework.data.relational.core.mapping.Table",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.query.Criteria"
  },
  {
    "name": "org.springframework.data.relational.core.query.Query"
  },
  {
    "name": "org.springframework.data.relational.core.query.Update"
  },
  {
    "name": "org.springframework.data.relational.core.sql.SqlIdentifier"
  },
  {
    "name": "org.springframework.data.relational.core.sql.Table"
  },
  {
    "name": "org.springframework.data.relational.domain.RowDocument"
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.ListPagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.AotRepositoryContext"
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationAdapter",
    "methods": [
      {
        "name": "toRepositoryConfiguration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfigurationSource"
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getConfigMap",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.EntityInformation"
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryInformation"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$InvokedMethod"
  },
  {
    "name": "org.springframework.data.repository.core.support.MethodLookup$MethodPredicate"
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryInvocationMulticaster"
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setEnableDefaultTransactions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
  },
  {
    "name": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.TypeInformation"
  },
  {
    "name": "org.springframework.data.web.PageableDefault"
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
  },
  {
    "name": "org.springframework.data.web.SortDefault"
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.expression.BeanResolver"
  },
  {
    "name": "org.springframework.expression.EvaluationContext"
  },
  {
    "name": "org.springframework.expression.Expression"
  },
  {
    "name": "org.springframework.format.AnnotationFormatterFactory"
  },
  {
    "name": "org.springframework.format.Formatter"
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.Parser"
  },
  {
    "name": "org.springframework.format.Printer"
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.hateoas.EntityModel"
  },
  {
    "name": "org.springframework.hateoas.server.LinkRelationProvider"
  },
  {
    "name": "org.springframework.http.HttpHeaders"
  },
  {
    "name": "org.springframework.http.HttpStatus"
  },
  {
    "name": "org.springframework.http.HttpStatusCode"
  },
  {
    "name": "org.springframework.http.MediaType"
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.ResponseCookie$ResponseCookieBuilder"
  },
  {
    "name": "org.springframework.http.ResponseEntity"
  },
  {
    "name": "org.springframework.http.client.ReactorResourceFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.client.reactive.ClientHttpConnector"
  },
  {
    "name": "org.springframework.http.client.reactive.ReactorClientHttpConnector"
  },
  {
    "name": "org.springframework.http.codec.ClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer$CustomCodecs"
  },
  {
    "name": "org.springframework.http.codec.HttpMessageReader"
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer$ServerDefaultCodecs"
  },
  {
    "name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
  },
  {
    "name": "org.springframework.http.codec.support.BaseCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.BaseDefaultCodecs"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "customCodecs",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecs",
        "parameterTypes": []
      },
      {
        "name": "getReaders",
        "parameterTypes": []
      },
      {
        "name": "getWriters",
        "parameterTypes": []
      },
      {
        "name": "registerDefaults",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.PathContainer"
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
  },
  {
    "name": "org.springframework.http.server.reactive.ServerHttpRequest"
  },
  {
    "name": "org.springframework.http.server.reactive.ServerHttpResponse"
  },
  {
    "name": "org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getContextualName",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getHighCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getLowCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.server.reactive.observation.ServerRequestObservationContext"
  },
  {
    "name": "org.springframework.http.server.reactive.observation.ServerRequestObservationConvention",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getContextualName",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getHighCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "getLowCardinalityKeyValues",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.instrument.InstrumentationSavingAgent"
  },
  {
    "name": "org.springframework.instrument.classloading.LoadTimeWeaver"
  },
  {
    "name": "org.springframework.integration.config.EnableIntegration"
  },
  {
    "name": "org.springframework.integration.graph.IntegrationGraphServer"
  },
  {
    "name": "org.springframework.jdbc.SQLWarningException"
  },
  {
    "name": "org.springframework.jdbc.core.BatchPreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.CallableStatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.CallableStatementCreator"
  },
  {
    "name": "org.springframework.jdbc.core.ConnectionCallback"
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCreator"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementCreatorFactory"
  },
  {
    "name": "org.springframework.jdbc.core.PreparedStatementSetter"
  },
  {
    "name": "org.springframework.jdbc.core.ResultSetExtractor"
  },
  {
    "name": "org.springframework.jdbc.core.ResultSetSupportingSqlParameter"
  },
  {
    "name": "org.springframework.jdbc.core.RowCallbackHandler"
  },
  {
    "name": "org.springframework.jdbc.core.RowMapper"
  },
  {
    "name": "org.springframework.jdbc.core.StatementCallback"
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.ParsedSql"
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.SqlParameterSource"
  },
  {
    "name": "org.springframework.jdbc.core.simple.DefaultJdbcClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient$StatementSpec"
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager"
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createConnectionBuilder",
        "parameterTypes": []
      },
      {
        "name": "createShardingKeyBuilder",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "getTargetDataSource",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTargetDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.datasource.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.support.KeyHolder"
  },
  {
    "name": "org.springframework.jdbc.support.SQLExceptionTranslator"
  },
  {
    "name": "org.springframework.jdbc.support.rowset.SqlRowSet"
  },
  {
    "name": "org.springframework.jms.core.JmsTemplate"
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter"
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedAttribute",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.kafka.core.KafkaTemplate"
  },
  {
    "name": "org.springframework.kafka.core.ProducerFactory"
  },
  {
    "name": "org.springframework.lang.NonNull"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.ldap.core.ContextSource"
  },
  {
    "name": "org.springframework.ldap.core.LdapOperations"
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSenderImpl"
  },
  {
    "name": "org.springframework.messaging.Message"
  },
  {
    "name": "org.springframework.messaging.MessagingException"
  },
  {
    "name": "org.springframework.messaging.converter.MessageConverter"
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessageReceivingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "doReceive",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "receive",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "receiveAndConvert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessagingTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Class",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "convertSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "java.lang.Class",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "doReceive",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "doSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "doSendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "sendAndReceive",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.MessagePostProcessor"
  },
  {
    "name": "org.springframework.messaging.core.MessageReceivingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.core.MessageRequestReplyOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.core.MessageSendingOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager$JpaTransactionObject"
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setLoadTimeWeaver",
        "parameterTypes": [
          "org.springframework.instrument.classloading.LoadTimeWeaver"
        ]
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.ManagedClassNameFilter"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor"
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getManagedClassNames",
        "parameterTypes": []
      },
      {
        "name": "getManagedPackages",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitRootUrl",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.Database"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaDialect"
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "jakarta.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.oxm.Marshaller"
  },
  {
    "name": "org.springframework.r2dbc.connection.R2dbcTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject"
  },
  {
    "name": "org.springframework.r2dbc.connection.init.DatabasePopulator"
  },
  {
    "name": "org.springframework.r2dbc.core.ConnectionAccessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.r2dbc.core.DatabaseClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.r2dbc.core.DatabaseClient$Builder"
  },
  {
    "name": "org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec"
  },
  {
    "name": "org.springframework.r2dbc.core.DefaultDatabaseClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "inConnection",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "inConnectionMany",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.r2dbc.core.DefaultDatabaseClient$ConnectionCloseHolder"
  },
  {
    "name": "org.springframework.r2dbc.core.Parameter"
  },
  {
    "name": "org.springframework.r2dbc.core.PreparedOperation"
  },
  {
    "name": "org.springframework.r2dbc.core.RowsFetchSpec"
  },
  {
    "name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.BuiltInBindMarkersFactoryProvider"
  },
  {
    "name": "org.springframework.r2dbc.core.binding.IndexedBindMarkers",
    "fields": [
      {
        "name": "counter"
      }
    ]
  },
  {
    "name": "org.springframework.rabbit.stream.config.StreamRabbitListenerContainerFactory"
  },
  {
    "name": "org.springframework.retry.RecoveryCallback"
  },
  {
    "name": "org.springframework.retry.RetryContext"
  },
  {
    "name": "org.springframework.retry.support.RetryTemplate"
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "prefersShortLivedTasks",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "long"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.util.Date",
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.Trigger"
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Scheduled",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "initiateShutdown",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextClosedEvent"
        ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getClock",
        "parameterTypes": []
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant"
        ]
      },
      {
        "name": "schedule",
        "parameterTypes": [
          "java.lang.Runnable",
          "org.springframework.scheduling.Trigger"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleAtFixedRate",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Duration"
        ]
      },
      {
        "name": "scheduleWithFixedDelay",
        "parameterTypes": [
          "java.lang.Runnable",
          "java.time.Instant",
          "java.time.Duration"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submit",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "submitListenable",
        "parameterTypes": [
          "java.util.concurrent.Callable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskRegistrar"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "publishAuthenticationFailure",
        "parameterTypes": [
          "org.springframework.security.core.AuthenticationException",
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "publishAuthenticationSuccess",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager"
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.password.ReactiveCompromisedPasswordChecker"
  },
  {
    "name": "org.springframework.security.config.Customizer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationPrincipalArgumentResolver",
        "parameterTypes": []
      },
      {
        "name": "authenticationPrincipalArgumentResolverConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": []
      },
      {
        "name": "reactiveCurrentSecurityContextArgumentResolver",
        "parameterTypes": []
      },
      {
        "name": "setAdapterRegistry",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry"
        ]
      },
      {
        "name": "setObservationRegistry",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": []
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": []
      },
      {
        "name": "setObservationRegistry",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      },
      {
        "name": "setSecurityWebFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springSecurityWebFilterChainFilter",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy"
  },
  {
    "name": "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "addFilterAt",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "anonymous",
        "parameterTypes": []
      },
      {
        "name": "anonymous",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "authenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.ReactiveAuthenticationManager"
        ]
      },
      {
        "name": "authorizeExchange",
        "parameterTypes": []
      },
      {
        "name": "authorizeExchange",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "cors",
        "parameterTypes": []
      },
      {
        "name": "cors",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "csrf",
        "parameterTypes": []
      },
      {
        "name": "csrf",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "exceptionHandling",
        "parameterTypes": []
      },
      {
        "name": "exceptionHandling",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "formLogin",
        "parameterTypes": []
      },
      {
        "name": "formLogin",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "headers",
        "parameterTypes": []
      },
      {
        "name": "headers",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "httpBasic",
        "parameterTypes": []
      },
      {
        "name": "httpBasic",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "logout",
        "parameterTypes": []
      },
      {
        "name": "logout",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2Client",
        "parameterTypes": []
      },
      {
        "name": "oauth2Client",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2Login",
        "parameterTypes": []
      },
      {
        "name": "oauth2Login",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2ResourceServer",
        "parameterTypes": []
      },
      {
        "name": "oauth2ResourceServer",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oidcLogout",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "passwordManagement",
        "parameterTypes": []
      },
      {
        "name": "passwordManagement",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "redirectToHttps",
        "parameterTypes": []
      },
      {
        "name": "redirectToHttps",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "requestCache",
        "parameterTypes": []
      },
      {
        "name": "requestCache",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "securityContextRepository",
        "parameterTypes": [
          "org.springframework.security.web.server.context.ServerSecurityContextRepository"
        ]
      },
      {
        "name": "securityMatcher",
        "parameterTypes": [
          "org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"
        ]
      },
      {
        "name": "sessionManagement",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "x509",
        "parameterTypes": []
      },
      {
        "name": "x509",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$AnonymousSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$AuthorizeExchangeSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$FormLoginSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$HttpBasicSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ClientSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ResourceServerSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$PasswordManagementSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity$X509Spec"
  },
  {
    "name": "org.springframework.security.core.Authentication"
  },
  {
    "name": "org.springframework.security.core.AuthenticationException"
  },
  {
    "name": "org.springframework.security.core.annotation.CurrentSecurityContext"
  },
  {
    "name": "org.springframework.security.core.context.ReactiveSecurityContextHolder"
  },
  {
    "name": "org.springframework.security.core.context.SecurityContext"
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextImpl"
  },
  {
    "name": "org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService"
  },
  {
    "name": "org.springframework.security.core.userdetails.ReactiveUserDetailsService"
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder"
  },
  {
    "name": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"
  },
  {
    "name": "org.springframework.security.oauth2.jwt.ReactiveJwtDecoder"
  },
  {
    "name": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
  },
  {
    "name": "org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
  },
  {
    "name": "org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
  },
  {
    "name": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
  },
  {
    "name": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain"
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
  },
  {
    "name": "org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.reactive.BindingContext",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveArgument",
        "parameterTypes": [
          "org.springframework.core.MethodParameter",
          "org.springframework.web.reactive.BindingContext",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supportsParameter",
        "parameterTypes": [
          "org.springframework.core.MethodParameter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getExtraHiddenFields",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "processAction",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processFormFieldValue",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "processUrl",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.server.MatcherSecurityWebFilterChain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getWebFilters",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.server.SecurityWebFilterChain",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.server.ServerAuthenticationEntryPoint"
  },
  {
    "name": "org.springframework.security.web.server.WebFilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "filter",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.server.WebFilterChain"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.web.server.WebFilterChainProxy$WebFilterChainDecorator"
  },
  {
    "name": "org.springframework.security.web.server.authorization.ServerAccessDeniedHandler"
  },
  {
    "name": "org.springframework.security.web.server.context.ServerSecurityContextRepository"
  },
  {
    "name": "org.springframework.security.web.server.firewall.ServerExchangeRejectedException"
  },
  {
    "name": "org.springframework.security.web.server.firewall.ServerExchangeRejectedHandler"
  },
  {
    "name": "org.springframework.security.web.server.firewall.ServerWebExchangeFirewall"
  },
  {
    "name": "org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"
  },
  {
    "name": "org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher$MatchResult"
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher"
  },
  {
    "name": "org.springframework.session.Session"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addListener",
        "parameterTypes": [
          "org.springframework.transaction.TransactionExecutionListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransaction"
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionException"
  },
  {
    "name": "org.springframework.transaction.TransactionExecutionListener"
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionStatus"
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionRuntimeHints"
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory"
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getPointcut",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttribute"
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "name": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransaction"
        ]
      },
      {
        "name": "getReactiveTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransaction"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder"
  },
  {
    "name": "org.springframework.transaction.reactive.GenericReactiveTransaction"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionCallback"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionContext"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionSynchronization"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionSynchronizationManager"
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "transactional",
        "parameterTypes": [
          "reactor.core.publisher.Flux"
        ]
      },
      {
        "name": "transactional",
        "parameterTypes": [
          "reactor.core.publisher.Mono"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperatorImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.reactive.TransactionCallback"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionExecutionListeners",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setTransactionExecutionListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionStatus"
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionCallback"
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "executeWithoutResult",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ui.Model"
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.ErrorHandler"
  },
  {
    "name": "org.springframework.util.MimeType"
  },
  {
    "name": "org.springframework.util.MultiValueMap"
  },
  {
    "name": "org.springframework.util.PropertiesPersister"
  },
  {
    "name": "org.springframework.util.StringValueResolver"
  },
  {
    "name": "org.springframework.util.backoff.BackOff"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFuture"
  },
  {
    "name": "org.springframework.util.concurrent.ListenableFutureTask"
  },
  {
    "name": "org.springframework.util.unit.DataSize"
  },
  {
    "name": "org.springframework.validation.Errors"
  },
  {
    "name": "org.springframework.validation.MessageCodesResolver"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.method.MethodValidationResult"
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin"
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ModelAttribute"
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
  },
  {
    "name": "org.springframework.web.bind.support.WebBindingInitializer"
  },
  {
    "name": "org.springframework.web.client.RestClient"
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder"
  },
  {
    "name": "org.springframework.web.client.RestTemplate"
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.request.WebRequest"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration"
  },
  {
    "name": "org.springframework.web.cors.reactive.CorsConfigurationSource"
  },
  {
    "name": "org.springframework.web.cors.reactive.CorsProcessor"
  },
  {
    "name": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter"
  },
  {
    "name": "org.springframework.web.method.HandlerMethod"
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.BindingContext"
  },
  {
    "name": "org.springframework.web.reactive.DispatchExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handlePreFlight",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerResult"
  },
  {
    "name": "org.springframework.web.reactive.HandlerResultHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
  },
  {
    "name": "org.springframework.web.reactive.config.BlockingExecutionConfigurer"
  },
  {
    "name": "org.springframework.web.reactive.config.CorsRegistry"
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.EnableWebFlux",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.PathMatchConfigurer"
  },
  {
    "name": "org.springframework.web.reactive.config.ResourceHandlerRegistration"
  },
  {
    "name": "org.springframework.web.reactive.config.ResourceHandlerRegistry"
  },
  {
    "name": "org.springframework.web.reactive.config.ViewResolverRegistry"
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.reactive.config.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureBlockingExecution",
        "parameterTypes": [
          "org.springframework.web.reactive.config.BlockingExecutionConfigurer"
        ]
      },
      {
        "name": "configureContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWebSocketService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.client.ClientRequestObservationConvention"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient$Builder"
  },
  {
    "name": "org.springframework.web.reactive.function.server.HandlerFunction",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.RequestPredicate"
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunction"
  },
  {
    "name": "org.springframework.web.reactive.function.server.ServerRequest"
  },
  {
    "name": "org.springframework.web.reactive.function.server.ServerResponse"
  },
  {
    "name": "org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder"
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternParser",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsProcessor"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseCaseSensitiveMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setHandlerPredicate",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceWebHandler"
  },
  {
    "name": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "getContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.condition.RequestCondition"
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.method.HandlerMethod",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$MappingRegistry"
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.InvocableHandlerMethod"
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfo"
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMessageWriters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.InitBinderBindingContext"
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "getPathPrefixes",
        "parameterTypes": []
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.RequestMappingInfo",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setPathPrefixes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.view.RequestDataValueProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.view.View"
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolver"
  },
  {
    "name": "org.springframework.web.reactive.socket.server.WebSocketService"
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.ServerWebExchange"
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebFilterChain"
  },
  {
    "name": "org.springframework.web.server.WebHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebSession"
  },
  {
    "name": "org.springframework.web.server.adapter.ForwardedHeaderTransformer"
  },
  {
    "name": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.http.server.reactive.ServerHttpRequest",
          "org.springframework.http.server.reactive.ServerHttpResponse"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.adapter.WebHttpHandlerBuilder"
  },
  {
    "name": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setWarnLogCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.handler.WebHandlerDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "resolveLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.context.i18n.LocaleContext"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.CookieWebSessionIdResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "expireSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "resolveSessionIds",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.DefaultWebSessionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.WebSessionIdResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionStore"
  },
  {
    "name": "org.springframework.web.service.annotation.HttpExchange"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.EnableWebMvc",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPattern"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser"
  },
  {
    "name": "org.springframework.ws.transport.http.MessageDispatcherServlet"
  },
  {
    "name": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine"
  },
  {
    "name": "org.webjars.WebJarAssetLocator"
  },
  {
    "name": "org.xnio.SslClientAuthMode"
  },
  {
    "name": "reactor.core.Disposable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "dispose",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "reactor.core.observability.SignalListener"
  },
  {
    "name": "reactor.core.publisher.FlatMapTracker",
    "fields": [
      {
        "name": "size"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
    "fields": [
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
    "fields": [
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber",
    "fields": [
      {
        "name": "error"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxCreate$BaseSink",
    "fields": [
      {
        "name": "disposable"
      },
      {
        "name": "requestConsumer"
      },
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxCreate$BufferAsyncSink",
    "fields": [
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxCreate$SerializedFluxSink",
    "fields": [
      {
        "name": "error"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber",
    "fields": [
      {
        "name": "fallbackValue"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
    "fields": [
      {
        "name": "once"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxFirstWithSignal$RaceCoordinator",
    "fields": [
      {
        "name": "winner"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxFlatMap$FlatMapInner",
    "fields": [
      {
        "name": "s"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxFlatMap$FlatMapMain",
    "fields": [
      {
        "name": "error"
      },
      {
        "name": "requested"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxIterable$IterableSubscription",
    "fields": [
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
    "fields": [
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxRange$RangeSubscription",
    "fields": [
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxRetry$RetrySubscriber",
    "fields": [
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxSubscribeOnValue$ScheduledScalar",
    "fields": [
      {
        "name": "future"
      },
      {
        "name": "once"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
    "fields": [
      {
        "name": "index"
      },
      {
        "name": "timeout"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
    "fields": [
      {
        "name": "s"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber",
    "fields": [
      {
        "name": "callbackApplied"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxWindowPredicate$WindowFlux",
    "fields": [
      {
        "name": "actual"
      },
      {
        "name": "once"
      },
      {
        "name": "parent"
      },
      {
        "name": "requested"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.FluxWindowPredicate$WindowPredicateMain",
    "fields": [
      {
        "name": "cancelled"
      },
      {
        "name": "error"
      },
      {
        "name": "requested"
      },
      {
        "name": "windowCount"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Hooks"
  },
  {
    "name": "reactor.core.publisher.LambdaMonoSubscriber",
    "fields": [
      {
        "name": "subscription"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.LambdaSubscriber",
    "fields": [
      {
        "name": "subscription"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.core.publisher.MonoCacheTime",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
    "fields": [
      {
        "name": "disposable"
      },
      {
        "name": "requestConsumer"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator",
    "fields": [
      {
        "name": "error"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
    "fields": [
      {
        "name": "second"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
    "fields": [
      {
        "name": "inner"
      },
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoNext$NextSubscriber",
    "fields": [
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber",
    "fields": [
      {
        "name": "requested"
      },
      {
        "name": "s"
      },
      {
        "name": "thread"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoSupplier$MonoSupplierSubscription",
    "fields": [
      {
        "name": "requestedOnce"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoWhen$WhenCoordinator",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoWhen$WhenInner",
    "fields": [
      {
        "name": "s"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoZip$ZipCoordinator",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoZip$ZipInner",
    "fields": [
      {
        "name": "s"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Operators$BaseFluxToMonoOperator",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Operators$DeferredSubscription",
    "fields": [
      {
        "name": "requested"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Operators$MonoInnerProducerBase",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
    "fields": [
      {
        "name": "missedProduced"
      },
      {
        "name": "missedRequested"
      },
      {
        "name": "missedSubscription"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Operators$ScalarSubscription",
    "fields": [
      {
        "name": "once"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.SinkEmptyMulticast",
    "fields": [
      {
        "name": "subscribers"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.SinkManyBestEffort",
    "fields": [
      {
        "name": "subscribers"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.SinkManyUnicast",
    "fields": [
      {
        "name": "discardGuard"
      },
      {
        "name": "onTerminate"
      },
      {
        "name": "once"
      },
      {
        "name": "requested"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
    "fields": [
      {
        "name": "lockedAt"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.SynchronousSink"
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticScheduler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticScheduler$BoundedServices",
    "fields": [
      {
        "name": "busyStates"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticScheduler$BoundedState",
    "fields": [
      {
        "name": "markCount"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.DelegateServiceScheduler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.ParallelScheduler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.SchedulerTask",
    "fields": [
      {
        "name": "future"
      },
      {
        "name": "parent"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.SingleScheduler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.WorkerTask",
    "fields": [
      {
        "name": "future"
      },
      {
        "name": "parent"
      },
      {
        "name": "thread"
      }
    ]
  },
  {
    "name": "reactor.netty.channel.ChannelOperations",
    "fields": [
      {
        "name": "outboundSubscription"
      }
    ]
  },
  {
    "name": "reactor.netty.channel.ChannelOperationsHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.channel.FluxReceive",
    "fields": [
      {
        "name": "receiverCancel"
      }
    ]
  },
  {
    "name": "reactor.netty.http.Http2SettingsSpec$Builder"
  },
  {
    "name": "reactor.netty.http.HttpProtocol"
  },
  {
    "name": "reactor.netty.http.client.HttpClient"
  },
  {
    "name": "reactor.netty.http.server.HttpRequestDecoderSpec"
  },
  {
    "name": "reactor.netty.http.server.HttpServer"
  },
  {
    "name": "reactor.netty.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.netty.resources.ConnectionProvider"
  },
  {
    "name": "reactor.netty.resources.LoopResources"
  },
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "reactor.netty5.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.pool.AbstractPool$AbstractPooledRef",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.pool.AllocationStrategies$SizeBasedAllocationStrategy",
    "fields": [
      {
        "name": "permits"
      }
    ]
  },
  {
    "name": "reactor.pool.InstrumentedPool"
  },
  {
    "name": "reactor.pool.InstrumentedPool$PoolMetrics"
  },
  {
    "name": "reactor.pool.PooledRef"
  },
  {
    "name": "reactor.pool.PooledRefMetadata"
  },
  {
    "name": "reactor.pool.SimpleDequePool",
    "fields": [
      {
        "name": "acquired"
      },
      {
        "name": "idleResources"
      },
      {
        "name": "idleSize"
      },
      {
        "name": "pending"
      },
      {
        "name": "pendingSize"
      },
      {
        "name": "wip"
      }
    ]
  },
  {
    "name": "reactor.pool.SimpleDequePool$QueuePoolRecyclerInner",
    "fields": [
      {
        "name": "once"
      }
    ]
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "reactor.util.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue",
    "fields": [
      {
        "name": "consumerNode"
      },
      {
        "name": "producerNode"
      }
    ]
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
    "fields": [
      {
        "name": "next"
      }
    ]
  },
  {
    "name": "reactor.util.concurrent.SpscArrayQueueConsumer",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "reactor.util.concurrent.SpscArrayQueueProducer",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "reactor.util.concurrent.SpscLinkedArrayQueue",
    "fields": [
      {
        "name": "consumerIndex"
      },
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "reactor.util.context.Context"
  },
  {
    "name": "reactor.util.lang.NonNullApi"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "storeFence",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys"
      },
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "zipkin2.reporter.Encoding"
  }
]
